set.seed(1) 
rexp2 <- function(n, rate){ if (rate==0) rep(Inf,n) else rexp(n=n, rate = rate)}
simulated_data<- function(n,beta0 , beta1 ,beta2, alpha, mean.censor)
{   
  x <- rbinom(n, size = 1, p = 0.5)
  x2<- rnorm(n,0,1)
  t0<- rexp2(n, rate= 1/mean.censor)
  survreg_sim_data <- rsurvreg( n, mean = beta0 + beta1 * x +beta2*x2 ,
                                scale=1/alpha, distribution='weibull')
  t <- pmin(survreg_sim_data, t0)
  d <- as.numeric(t0>= survreg_sim_data )
  x<-as.factor(x)
  data_form<- data.frame(survreg_sim_data,t0,t,d,x,x2) 
  out_r<-list(data_form=data_form, alpha=alpha, beta0=beta0, beta1=beta1,beta2=beta2)
  return (out_r) 
}
library("foreach")
library("survival")

n<-50
beta0<-2
beta1<-1
beta2<-2
alpha<-1.7
mean.censor<-14

#nrep is preset to a number

# simulating a dataset
out_r<- simulated_data(n=n,beta0=beta0,beta1=beta1,beta2 = beta2,
                       alpha=alpha, mean.censor=mean.censor)
data<-out_r$data_form
simulated_data_random<-out_r$data_form


#checking censoring rate
table(simulated_data_random$d)

fit2<-coxph(Surv(t,d) ~ x+x2, data=simulated_data_random)
#zresid<-Zresidual.coxph(fit_coxph = fit2,newdata = simulated_data_random)



allresid<-Zresidual(fit.object=fit2,data=simulated_data_random)

qqnorm.zresid(allresid$Zresid)

