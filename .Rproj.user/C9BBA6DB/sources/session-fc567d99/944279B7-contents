#setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd("~/Desktop/Zresid_paper/z_residual")
source("~/Desktop/Zresid_paper/z_residual/clustered_nonlineardata.R") 
source("~/Desktop/Zresid_paper/z_residual/allresiduals.R") 
library("survival")
library("EnvStats")
library("nortest")
library("backports")
library("stringr")
library("timereg")

para.frame <- data.frame(
  n_clusters = c(20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
                 20,20,20,20,20,20,20,20,20,20,20,20,20,20,20),
  n_individuals = c(10,10,10,20,20,20,30,30,30,40,40,40,50,50,50,
                    60,60,60,70,70,70, 80,80,80,90,90,90,100,100,100),
  beta1 = rep(1,times=30),
  beta2 = rep(-2,times=30),
  beta3 = rep(0.5,times=30),
  fv =  rep(0.5,times=30),
  lambda=rep(0.007,times=30),
  alpha=rep(3,times=30),
  mean.censor=rep(c(17.8,5.5,2),times=10),
  c=rep(c(20,50,80),times=10)
)

#for(i in 1:30){
    i=2
  para<-para.frame[i,]
  n_clusters<-para[1]
  n_individuals<-para[2]
  beta1<-para[3]
  beta2<-para[4]
  beta3<-para[5]
  fv<-para[6]
  lambda<-para[7]
  alpha<-para[8]
  mean.censor<-para[9]
fit_coxph<-NA
fit_coxph_w<-NA
fit_coxAalen<-NA
fit_coxAalen_w<-NA
while(any(is.na(fit_coxph)) || any(is.na(fit_coxph_w))) {
  check_table<-FALSE
  while(isFALSE(check_table)){
    simulated_shared_frailty_data<-
      simulWeib(n_clusters=n_clusters[1,],n_individuals=n_individuals[1,],
                lambda=lambda[1,],alpha=alpha[1,],beta1=beta1[1,],
                beta2=beta2[1,],beta3=beta3[1,], 
                mean.censor= mean.censor[1,],fv=fv[1,])
    check_table<-all(apply(table(simulated_shared_frailty_data$x3,
                                 simulated_shared_frailty_data$d),
                           2,function(x) x>1))
  }
  ####fit true non-linear model############################################
  fit_coxph <- tryCatch(
    coxph(Surv(t, d) ~ x1+log(x2)+x3 +frailty(grpid,distribution = "gamma"),
          data = simulated_shared_frailty_data),
    error = function(e) NA,
    warning = function(w) NA
  )
  ####fit wrong linear model################################################
  fit_coxph_w <- tryCatch(
    coxph(Surv(t, d) ~ x1 +x2 + x3 +frailty(grpid, distribution="gamma"),
          data= simulated_shared_frailty_data),
    error = function(e) NA,
    warning = function(w) NA ) 
  
  ####fit true non-linear model using cox_aalen ############################################
  fit_coxAalen<-cox.aalen(Surv(t,d)~prop(x1)+prop(log(x2))+prop(x3)+
                            prop(frailty(grpid,distribution = "gamma")), 
                          data=simulated_shared_frailty_data,
                          residuals=1,rate.sim=0,n.sim=100)
  
  ####fit wrong linear model using cox_aalen #################################################
  fit_coxAalen_w<-cox.aalen(Surv(t,d)~prop(x1)+prop(x2)+prop(x3)+
                              prop(frailty(grpid,distribution = "gamma")), 
                            data=simulated_shared_frailty_data,
                            residuals=1,rate.sim=0,n.sim=1000)
}


censorship<-as.numeric(table(simulated_shared_frailty_data$d)[1]/
                         nrow(simulated_shared_frailty_data));censorship

resids_t<-zresidual.coxph (fit_coxph = fit_coxph,
                           traindata = simulated_shared_frailty_data,
                           newdata = simulated_shared_frailty_data)
resids_w<-zresidual.coxph (fit_coxph = fit_coxph_w,
                           traindata = simulated_shared_frailty_data,
                           newdata = simulated_shared_frailty_data)

anov_nrsp_x2_t<- test.nl.aov(qresidual=resids_t$nrsp, 
                             fitted.values=log(simulated_shared_frailty_data$x2),
                             k.anova=10);anov_nrsp_x2_t
anov_nrsp_x2_w<- test.nl.aov(qresidual=resids_w$nrsp,
                             fitted.values=log(simulated_shared_frailty_data$x2),
                             k.anova=10);anov_nrsp_x2_w

sw_nmsp_t<- shapiro.test(resids_t$nmsp)$p.value
sw_nmsp_w<- shapiro.test(resids_w$nmsp)$p.value
sw_dev_t<- shapiro.test(resids_t$dev)$p.value
sw_dev_w<- shapiro.test(resids_w$dev)$p.value

ks_nrsp_t<-ks.test(resids_t$nrsp,"pnorm")$p.value
ks_nrsp_w<-ks.test(resids_w$nrsp,"pnorm")$p.value

sf_nrsp_t<-sf.test(resids_t$nrsp)$p.value
sf_nrsp_w<-sf.test(resids_w$nrsp)$p.value
sw_nrsp_t<- shapiro.test(resids_t$nrsp)$p.value;sw_nrsp_t
sw_nrsp_w<- shapiro.test(resids_w$nrsp)$p.value;sw_nrsp_w

anov_nrsp_t<- test.nl.aov(qresidual=resids_t$nrsp, 
                          fitted.values=fit_coxph$linear.predictors,
                          k.anova=10);anov_nrsp_t
anov_nrsp_w<- test.nl.aov(qresidual=resids_w$nrsp,
                          fitted.values=fit_coxph_w$linear.predictors,
                          k.anova=10);anov_nrsp_w



censored<- simulated_shared_frailty_data$d ==0
gof_censored_t<-gofTestCensored(resids_t$nusp,censored, test = "sf", 
                                censoring.side = "right",
                                distribution = "norm")$p.value
gof_censored_t
gof_censored_w<-gofTestCensored(resids_w$nusp,censored, test = "sf", 
                                censoring.side = "right",
                                distribution = "norm")$p.value
gof_censored_w




#}
#the cumulative hazard function estimated by Kaplan-Meier method of CS residuals
km.ucs.t <- survfit(Surv(resids_t$ucs,simulated_shared_frailty_data$d)~1,type='fleming')
id.ucs.t<-order(resids_t$ucs)
km.ucs.w <- survfit(Surv(resids_w$ucs,simulated_shared_frailty_data$d)~1,type='fleming')
id.ucs.w<-order(resids_w$ucs)

#fix_var<-model.matrix(~.,data=simulated_shared_frailty_data[,c(3,4,5)])[,-1]
#fix_var[,2]<- log(fix_var[,2])
#lp_t<- fix_var %*% fit_coxph$coefficients+
#  fit_coxph$frail[simulated_shared_frailty_data$grpid]
#lp_w<- fix_var %*% fit_coxph_w$coefficients+
#  fit_coxph$frail[simulated_shared_frailty_data$grpid]


pdf( "allresid_plot.pdf",width=6,height=12)
par(mfrow = c(6,2),mar=c(4,4,2,2))
ymax1=max(range(resids_t$nrsp,resids_w$nrsp))
ymin1=min(range(resids_t$nrsp,resids_w$nrsp))
ymax2=max(range(km.ucs.t$cumhaz,km.ucs.w$cumhaz))
ymin2=min(range(km.ucs.t$cumhaz,km.ucs.w$cumhaz))
xmax2=max(range(km.ucs.t$time,km.ucs.w$time))
xmin2=min(range(km.ucs.t$time,km.ucs.w$time))
# the cumhaz plot
plot(km.ucs.t, fun="cumhaz", xlab="Unmodified Cox-Snell Residuals",
     ylab="Cumulative Hazard Function",
     main="True Model, CHF of CS Residuals",
     ylim=c(ymin2,ymax2),xlim=c(xmin2,xmax2))
abline(0, 1, col="red", lty=2)
points(km.ucs.t$time, -log(km.ucs.t$surv), 
       col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d[id.ucs.t]+1],
       pch=c(3,2)[simulated_shared_frailty_data$d[id.ucs.t]+1])
legend(x = "bottom", inset = c(0, -0.36), 
       legend = c("Uncensored", "Censored"), 
       col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")
plot(km.ucs.w, fun="cumhaz", xlab=("Unmodified Cox-Snell Residuals"),
     ylab="Cumulative Hazard Function",
     main="Wrong Model, CHF of CS Residuals",
     ylim=c(ymin2,ymax2),xlim=c(xmin2,xmax2))
abline(0, 1, col="red", lty=2)
points(km.ucs.w$time, -log(km.ucs.w$surv), 
       col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d[id.ucs.w]+1],
       pch=c(3,2)[simulated_shared_frailty_data$d[id.ucs.w]+1])
legend(x = "bottom", inset = c(0, -0.36), 
       legend = c("Uncensored", "Censored"),
       col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")
#The QQ plot
qqnorm(resids_t$nrsp,xlab="Theoretical Quantiles",
       ylab="Sample Quantiles",
       main="True Model, Z-Residual QQ Plot", 
       ylim = c(ymin1,ymax1));qqline(resids_t$nrsp)
text(-1.5, 3, paste0("Z-SW p-value = ", sprintf("%3.2f",sw_nrsp_t)))
qqnorm(resids_w$nrsp,xlab="Theoretical Quantiles", ylab="Sample Quantiles",
       main="Wrong Model, Z-Residual QQ Plot", 
       ylim = c(ymin1,ymax1));qqline(resids_w$nrsp)
text(-1.5, 3, paste0("Z-SW p-value = ", sprintf("%3.2f",sw_nrsp_w)))

#residual plot
plot(fit_coxph$linear.predictors,resids_t$nrsp,ylab="Z-Residual",
     xlab="Linear Predictor",
     col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d+1],
     pch=c(3,2)[simulated_shared_frailty_data$d+1],
     main="True Model, Z-Residual Scatterplot",ylim=c(ymin1,ymax1)) 
abline(h=c(3,-3),col="grey")
lines(lowess(resids_t$nrsp ~ fit_coxph$linear.predictors),col = "red",lwd = 3)
legend(x = "bottom", inset = c(0, -0.36), 
       legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")
plot(fit_coxph_w$linear.predictors,resids_w$nrsp,ylab="Z-Residual",
     xlab="Linear Predictor",
     col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d+1],
     pch=c(3,2)[simulated_shared_frailty_data$d+1],
     main="Wrong Model, Z-Residual Scatterplot",ylim=c(ymin1,ymax1)) 
abline(h=c(3,-3),col="grey")
lines(lowess(resids_w$nrsp ~ fit_coxph_w$linear.predictors),col = "red",lwd = 3)
legend(x = "bottom", inset = c(0, -0.36), 
       legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")

lpred.bin <- cut(fit_coxph$linear.predictors, 10)
plot(lpred.bin,resids_t$nrsp,xlab="Linear Predictor",ylab="Z-Residual",
     main="True Model, Z-Residual Boxplot",ylim=c(ymin1,4)) 
text(3.8, 3.8, paste0("Z-AOV-LP p-value = ", sprintf("%3.2f",anov_nrsp_t)))
lpred.bin_w <- cut(fit_coxph_w$linear.predictors, 10)
plot(lpred.bin_w,resids_w$nrsp,xlab="Linear Predictor", 
     ylab="Z-Residual",
     main="Wrong Model, Z-Residual Boxplot",ylim=c(ymin1,4)) 
text(3.8, 3.8, paste0("Z-AOV-LP p-value = ", sprintf("%3.2f",anov_nrsp_w)))

plot(log(simulated_shared_frailty_data$x2),
     resids_t$nrsp,ylab="Z-Residual",
     xlab=expression(paste(log(x[2]))),
     col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d+1],
     pch=c(3,2)[simulated_shared_frailty_data$d+1],
     main="True Model, Z-Residual Scatterplot",ylim=c(ymin1,ymax1)) 
abline(h=c(3,-3),col="grey")
lines(lowess(resids_t$nrsp ~ log(simulated_shared_frailty_data$x2)),
      col = "red",lwd = 3)
legend(x = "bottom", inset = c(0, -0.36), 
       legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")

plot(log(simulated_shared_frailty_data$x2),
     resids_w$nrsp,ylab="Z-Residual",
     xlab=expression(paste(log(x[2]))),
     col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d+1],
     pch=c(3,2)[simulated_shared_frailty_data$d+1],
     main="Wrong Model, Z-Residual Scatterplot",ylim=c(ymin1,ymax1)) 
abline(h=c(3,-3),col="grey")
lines(lowess(resids_w$nrsp ~ log(simulated_shared_frailty_data$x2)),
      col = "red",lwd = 3)
legend(x = "bottom", inset = c(0, -0.36), 
       legend = c("Uncensored", "Censored"),
       col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")

x2_t <- cut(log(simulated_shared_frailty_data$x2), 10)
plot(x2_t,resids_t$nrsp,xlab=expression(paste(log(x[2]))),ylab="Z-Residual",
     main="True Model, Z-Residual Boxplot",ylim=c(ymin1,4)) 
text(3.5, 3.8, expression("Z-AOV-log(x"[2]*") p-value ="))
text(7.2, 3.88,paste0(sprintf("%3.2f",anov_nrsp_x2_t))) 
x2_w <- cut(log(simulated_shared_frailty_data$x2), 10)
plot(x2_w,resids_w$nrsp,xlab=expression(paste(log(x[2]))),ylab="Z-Residual",
     main="Wrong Model, Z-Residual Boxplot",ylim=c(ymin1,4)) 
text(3.5, 3.8, expression("Z-AOV-log(x"[2]*") p-value ="))
text(7.2, 3.88,paste0(sprintf("%3.2f",anov_nrsp_x2_w))) 

dev.off()

mre_t <- resid(fit_coxph, type="martingale")
mre_w <- resid(fit_coxph_w, type="martingale")

dre_t <- resid(fit_coxph, type="deviance")
dre_w <- resid(fit_coxph_w, type="deviance")

#dev_nrsp_t<-shapiro.test(resids_t$dev)$p.value
#dev_nrsp_w<-shapiro.test(resids_w$dev)$p.value

pdf( "Mart_dev_plot.pdf",width=8,height=6)
par(mfrow = c(2,2),mar=c(4,4,2,2))
ymax=max(range(resids_t$martg,resids_w$martg,dre_t,dre_w), 
         na.rm = TRUE)
ymin=min(range(resids_t$martg,resids_w$martg,dre_t,dre_w), 
         na.rm = TRUE)
plot(log(simulated_shared_frailty_data$x2),
     resids_t$martg,ylab="Martingale",
     xlab=expression(paste(log(x[2]))),
     main="True Model, Martingale Residual Plot",
     col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d+1],
     pch=c(3,2)[simulated_shared_frailty_data$d+1],
     ylim=c(ymin,ymax)) 
abline(h=c(3,-3),col="grey")
lines(lowess(resids_t$martg ~ log(simulated_shared_frailty_data$x2)),
      col = "red",lwd = 3)
legend(x = "bottom", inset = c(0, -0.28), 
       legend = c("Uncensored", "Censored"),
       col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")

plot(log(simulated_shared_frailty_data$x2),
     resids_w$martg,ylab="Martingale",
     xlab=expression(paste(log(x[2]))),
     main="Wrong Model, Martingale Residual Plot",
     col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d+1],
     pch=c(3,2)[simulated_shared_frailty_data$d+1],
     ylim=c(ymin,ymax)) 
abline(h=c(3,-3),col="grey")
lines(lowess(resids_w$martg ~ log(simulated_shared_frailty_data$x2)),
      col = "red",lwd = 3)
legend(x = "bottom", inset = c(0, -0.28), 
       legend = c("Uncensored", "Censored"),
       col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")

# x2_t <- cut(log(simulated_shared_frailty_data$x2), 10)
# plot(x2_t,resids_t$martg,xlab=expression(paste(log(x[2]))),ylab="Z-Residual",
#      main="True Model, Martg Residual plot",ylim=c(ymin,ymax))
# x2_w <- cut(log(simulated_shared_frailty_data$x2), 10)
# plot(x2_w,resids_w$martg,xlab=expression(paste(log(x[2]))),ylab="Z-Residual",
#      main="Wrong Model, Martg Residual plot",ylim=c(ymin,ymax)) 

plot(log(simulated_shared_frailty_data$x2),
     dre_t,ylab="Deviance",
     xlab=expression(paste(log(x[2]))),
     main="True Model, Deviance Residual Plot",
     col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d+1],
     pch=c(3,2)[simulated_shared_frailty_data$d+1],
     ylim=c(ymin,ymax)) 
abline(h=c(3,-3),col="grey")
lines(lowess(dre_t ~ log(simulated_shared_frailty_data$x2)),
      col = "red",lwd = 3)
legend(x = "bottom", inset = c(0, -0.28), 
       legend = c("Uncensored", "Censored"),
       col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")

plot(log(simulated_shared_frailty_data$x2),
     dre_w,ylab="Deviance",
     xlab=expression(paste(log(x[2]))),
     main="Wrong Model, Deviance Residual Plot",
     col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d+1],
     pch=c(3,2)[simulated_shared_frailty_data$d+1],
     ylim=c(ymin,ymax)) 
abline(h=c(3,-3),col="grey")
lines(lowess(dre_w ~ log(simulated_shared_frailty_data$x2)),
      col = "red",lwd = 3)
legend(x = "bottom", inset = c(0, -0.28), 
       legend = c("Uncensored", "Censored"),
       col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")

# x2_t <- cut(log(simulated_shared_frailty_data$x2), 10)
# plot(x2_t,dre_t,xlab=expression(paste(log(x[2]))),ylab="Z-Residual",
#      main="True Model, Dev Residual plot",ylim=c(ymin,ymax))
# x2_w <- cut(log(simulated_shared_frailty_data$x2), 10)
# plot(x2_w,dre_w,xlab=expression(paste(log(x[2]))),ylab="Z-Residual",
#      main="Wrong Model, Dev Residual plot",ylim=c(ymin,ymax)) 

dev.off()

demo(plotmath)

setwd("~/Desktop/frailty_model/z_residual/nonlinear")

# group_para <- data.frame(
#   n_clusters = c(10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
#                  10,10,10,10,10,10,10,10,10,10,10,10,10,10,10),
#   n_individuals = c(10,10,10,20,20,20,30,30,30,40,40,40,50,50,50,
#                     60,60,60,70,70,70, 80,80,80,90,90,90,100,100,100),
#   c=rep(c(20,50,80),times=10)
# )

group_para <- data.frame(
  n_clusters = c(20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
                 20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
                 20,20,20,20,20,20,20,20,20,20),
  n_individuals = c(10,10,10,10,20,20,20,20,30,30,30,30,40,40,40,40,
                    50,50,50,50,60,60,60,60,70,70,70,70,80,80,80,80,
                    90,90,90,90,100,100,100,100),
  c=rep(c(0,20,50,80),times=10)
)

group_para$n<- group_para$n_clusters *group_para$n_individuals  
df<-data.frame(group_para,df_nonlinear)
rm(df_nonlinear,group_para)
df_c0<- df[c(1,5,9, 13,17,21,25,29,33,37),]
df_c20<-df[c(2,6,10,14,18,22,26,30,34,38),]
df_c50<-df[c(3,7,11,15,19,23,27,31,35,39),]
df_c80<-df[c(4,8,12,16,20,24,28,32,36,40),]

png("nonlinear.pdf",width=8,height=8, units="in", res=300)
layout(matrix(c(1,2,3,4,5,5), nrow = 2, ncol = 3, byrow=FALSE),
       widths = c(0.4,0.4,0.2),heights=c(0.5,0.5))
#par(mfrow = c(1,3), oma = c(0, 0, 0, 2))
#par(mar=c(3.5, 3.5, 2, 1), mgp=c(2.4, 0.8, 0))
ymax=max(range(df_c0$sw_tpe_nrsp_t,df_c0$sw_tpe_nrsp_w,
               df_c0$sf_tpe_nrsp_t,df_c0$sf_tpe_nrsp_w,
               df_c0$sf_tpe_nusp_t,df_c0$sf_tpe_nusp_w,
               df_c0$anov_tpe_nrsp_t,df_c0$anov_tpe_nrsp_w,
               df_c0$anov_tpe_nrsp_x2_t,df_c0$anov_tpe_nrsp_x2_w,
               df_c20$sw_tpe_nrsp_t,df_c20$sw_tpe_nrsp_w,
               df_c20$sf_tpe_nrsp_t,df_c20$sf_tpe_nrsp_w,
               df_c20$sf_tpe_nusp_t,df_c20$sf_tpe_nusp_w,
               df_c20$anov_tpe_nrsp_t,df_c20$anov_tpe_nrsp_w,
               df_c20$anov_tpe_nrsp_x2_t,df_c20$anov_tpe_nrsp_x2_w,
               df_c50$sw_tpe_nrsp_t,df_c50$sw_tpe_nrsp_w,
               df_c50$sf_tpe_nrsp_t,df_c50$sf_tpe_nrsp_w,
               df_c50$sf_tpe_nusp_t,df_c50$sf_tpe_nusp_w,
               df_c50$anov_tpe_nrsp_t,df_c50$anov_tpe_nrsp_w,
               df_c50$anov_tpe_nrsp_x2_t,df_c50$anov_tpe_nrsp_x2_w,
               df_c80$sw_tpe_nrsp_t,df_c80$sw_tpe_nrsp_w,
               df_c80$sf_tpe_nrsp_t,df_c80$sf_tpe_nrsp_w,
               df_c80$sf_tpe_nusp_t,df_c80$sf_tpe_nusp_w,
               df_c80$anov_tpe_nrsp_t,df_c80$anov_tpe_nrsp_w,
               df_c80$anov_tpe_nrsp_x2_t,df_c80$anov_tpe_nrsp_x2_w))
ymin=min(range(df_c0$sw_tpe_nrsp_t,df_c0$sw_tpe_nrsp_w,
               df_c0$sf_tpe_nrsp_t,df_c0$sf_tpe_nrsp_w,
               df_c0$sf_tpe_nusp_t,df_c0$sf_tpe_nusp_w,
               df_c0$anov_tpe_nrsp_t,df_c0$anov_tpe_nrsp_w,
               df_c0$anov_tpe_nrsp_x2_t,df_c0$anov_tpe_nrsp_x2_w,
               df_c20$sw_tpe_nrsp_t,df_c20$sw_tpe_nrsp_w,
               df_c20$sf_tpe_nrsp_t,df_c20$sf_tpe_nrsp_w,
               df_c20$sf_tpe_nusp_t,df_c20$sf_tpe_nusp_w,
               df_c20$anov_tpe_nrsp_t,df_c20$anov_tpe_nrsp_w,
               df_c20$anov_tpe_nrsp_x2_t,df_c20$anov_tpe_nrsp_x2_w,
               df_c50$sw_tpe_nrsp_t,df_c50$sw_tpe_nrsp_w,
               df_c50$sf_tpe_nrsp_t,df_c50$sf_tpe_nrsp_w,
               df_c50$sf_tpe_nusp_t,df_c50$sf_tpe_nusp_w,
               df_c50$anov_tpe_nrsp_t,df_c50$anov_tpe_nrsp_w,
               df_c50$anov_tpe_nrsp_x2_t,df_c50$anov_tpe_nrsp_x2_w,
               df_c80$sw_tpe_nrsp_t,df_c80$sw_tpe_nrsp_w,
               df_c80$sf_tpe_nrsp_t,df_c80$sf_tpe_nrsp_w,
               df_c80$sf_tpe_nusp_t,df_c80$sf_tpe_nusp_w,
               df_c80$anov_tpe_nrsp_t,df_c80$anov_tpe_nrsp_w,
               df_c80$anov_tpe_nrsp_x2_t,df_c80$anov_tpe_nrsp_x2_w))

plot(df_c0$n_individuals,df_c0$sw_tpe_nrsp_t,type="b",
     main=expression(paste("Model Rejection Rate, Censoring Rate" %~~% "0%")),
     xlab="Cluster Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax),pch=0)
points(df_c0$n_individuals,df_c0$sw_tpe_nrsp_w,col="red",type="b",pch=0)
points(df_c0$n_individuals,df_c0$sf_tpe_nrsp_t,col="blue",type="b",pch=1)
points(df_c0$n_individuals,df_c0$sf_tpe_nrsp_w,col="red",type="b",pch=1)
points(df_c0$n_individuals,df_c0$sf_tpe_nusp_t,col="blue",type="b",pch=4)
points(df_c0$n_individuals,df_c0$sf_tpe_nusp_w,col="red",type="b",pch=4)
points(df_c0$n_individuals,df_c0$anov_tpe_nrsp_t,col="blue",type="b",pch=2)
points(df_c0$n_individuals,df_c0$anov_tpe_nrsp_w,col="red",type="b",pch=2)
points(df_c0$n_individuals,df_c0$anov_tpe_nrsp_x2_t,col="blue",type="b",pch=3)
points(df_c0$n_individuals,df_c0$anov_tpe_nrsp_x2_w,col="red",type="b",pch=3)
abline(h = 0.05)

plot(df_c50$n_individuals,df_c50$sw_tpe_nrsp_t,type="b",
     main=expression(paste("Model Rejection Rate, Censoring Rate" %~~% "50%")),
     xlab="Cluster Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax),pch=0)
points(df_c50$n_individuals,df_c50$sw_tpe_nrsp_w,col="red", type="b",pch=0)
points(df_c50$n_individuals,df_c50$sf_tpe_nrsp_t,col="blue",type="b",pch=1)
points(df_c50$n_individuals,df_c50$sf_tpe_nrsp_w,col="red",type="b",pch=1)
points(df_c50$n_individuals,df_c50$sf_tpe_nusp_t,col="blue",type="b",pch=4)
points(df_c50$n_individuals,df_c50$sf_tpe_nusp_w,col="red", type="b",pch=4)
points(df_c50$n_individuals,df_c50$anov_tpe_nrsp_t,col="blue",type="b",pch=2)
points(df_c50$n_individuals,df_c50$anov_tpe_nrsp_w,col="red", type="b",pch=2)
points(df_c50$n_individuals,df_c50$anov_tpe_nrsp_x2_t,col="blue",type="b",pch=3)
points(df_c50$n_individuals,df_c50$anov_tpe_nrsp_x2_w,col="red",type="b",pch=3)
abline(h = 0.05)

plot(df_c20$n_individuals,df_c20$sw_tpe_nrsp_t,type="b",
     main=expression(paste("Model Rejection Rate, Censoring Rate" %~~% "20%")),
     xlab="Cluster Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax),pch=0)
points(df_c20$n_individuals,df_c20$sw_tpe_nrsp_w,col="red",type="b",pch=0)
points(df_c20$n_individuals,df_c20$sf_tpe_nrsp_t,col="blue",type="b",pch=1)
points(df_c20$n_individuals,df_c20$sf_tpe_nrsp_w,col="red",type="b",pch=1)
points(df_c20$n_individuals,df_c20$sf_tpe_nusp_t,col="blue",type="b",pch=4)
points(df_c20$n_individuals,df_c20$sf_tpe_nusp_w,col="red",type="b",pch=4)
points(df_c20$n_individuals,df_c20$anov_tpe_nrsp_t,col="blue",type="b",pch=2)
points(df_c20$n_individuals,df_c20$anov_tpe_nrsp_w,col="red",type="b",pch=2)
points(df_c20$n_individuals,df_c20$anov_tpe_nrsp_x2_t,col="blue",type="b",pch=3)
points(df_c20$n_individuals,df_c20$anov_tpe_nrsp_x2_w,col="red",type="b",pch=3)
abline(h = 0.05)

plot(df_c80$n_individuals,df_c80$sw_tpe_nrsp_t,type="b",
     main=expression(paste("Model Rejection Rate, Censoring Rate" %~~% "80%")),
     xlab="Cluster Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax),pch=0)
points(df_c80$n_individuals,df_c80$sw_tpe_nrsp_w,col="red",type="b",pch=0)
points(df_c80$n_individuals,df_c80$sf_tpe_nrsp_t,col="blue",type="b",pch=1)
points(df_c80$n_individuals,df_c80$sf_tpe_nrsp_w,col="red",type="b",pch=1)
points(df_c80$n_individuals,df_c80$sf_tpe_nusp_t,col="blue",type="b",pch=4)
points(df_c80$n_individuals,df_c80$sf_tpe_nusp_w,col="red",type="b",pch=4)
points(df_c80$n_individuals,df_c80$anov_tpe_nrsp_t,col="blue",type="b",pch=2)
points(df_c80$n_individuals,df_c80$anov_tpe_nrsp_w,col="red",type="b",pch=2)
points(df_c80$n_individuals,df_c80$anov_tpe_nrsp_x2_t,col="blue",type="b",pch=3)
points(df_c80$n_individuals,df_c80$anov_tpe_nrsp_x2_w,col="red",type="b",pch=3)
abline(h = 0.05)
##########legend  ###################################################
par(mar=c(0,0,0,0)) # Make the margins 0
plot(1, type = "n", axes=F, xlab="", ylab="") # Create empty plot

legend("center", c("Z-SW, True","Z-SW, Wrong","Z-SF, True",
                   "Z-SF, Wrong","CZ-CSF, True","CZ-CSF, Wrong",
                   "Z-AOV-LP, True","Z-AOV-LP, Wrong",
                   as.expression(bquote("Z-AOV-"~log(x[2])~", True")),
                   as.expression(bquote("Z-AOV-"~log(x[2])~", Wrong"))), 
       horiz=FALSE,
       pch = c(0,0,1,1,4,4,2,2,3,3), 
       col=c("blue","red","blue","red","blue","red",
             "blue","red","blue","red"),xjust = 0.8)
##################################################################
dev.off()


png("nonlinear_dev.pdf",width=8,height=8, units="in", res=300)
layout(matrix(c(1,2,3,4,5,5), nrow = 2, ncol = 3, byrow=FALSE),
       widths = c(0.4,0.4,0.2),heights=c(0.5,0.5))
ymax=max(range(df_c0$sw_tpe_dev_t,df_c0$sw_tpe_dev_w,
               df_c0$ks_tpe_nrsp_t, df_c0$ks_tpe_nrsp_w,
               df_c20$sw_tpe_dev_t,df_c20$sw_tpe_dev_w,
               df_c20$ks_tpe_nrsp_t, df_c20$ks_tpe_nrsp_w,
               df_c50$sw_tpe_dev_t,df_c50$sw_tpe_dev_w,
               df_c50$ks_tpe_nrsp_t, df_c50$ks_tpe_nrsp_w,
               df_c80$sw_tpe_dev_t,df_c80$sw_tpe_dev_w,
               df_c80$ks_tpe_nrsp_t, df_c80$ks_tpe_nrsp_w))

ymin=min(range(df_c0$sw_tpe_dev_t,df_c0$sw_tpe_dev_w,
               df_c0$ks_tpe_nrsp_t, df_c0$ks_tpe_nrsp_w,
               df_c20$sw_tpe_dev_t,df_c20$sw_tpe_dev_w,
               df_c20$ks_tpe_nrsp_t, df_c20$ks_tpe_nrsp_w,
               df_c50$sw_tpe_dev_t,df_c50$sw_tpe_dev_w,
               df_c50$ks_tpe_nrsp_t, df_c50$ks_tpe_nrsp_w,
               df_c80$sw_tpe_dev_t,df_c80$sw_tpe_dev_w,
               df_c80$ks_tpe_nrsp_t, df_c80$ks_tpe_nrsp_w))
plot(df_c0$n_individuals,df_c0$sw_tpe_dev_t,type="b",
     main=expression(paste("Model Rejection Rate, Censoring Rate" %~~% "0%")),
     xlab="Cluster Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax),pch=0)
points(df_c0$n_individuals,df_c0$sw_tpe_dev_w,col="red",
       type="b",pch=3)
points(df_c0$n_individuals,df_c0$ks_tpe_nrsp_t,col="blue",type="b",pch=2)
points(df_c0$n_individuals,df_c0$ks_tpe_nrsp_w,col="red",type="b",pch=10)
abline(h = 0.05)

plot(df_c50$n_individuals,df_c50$sw_tpe_dev_t,type="b",
     main=expression(paste("Model Rejection Rate, Censoring Rate" %~~% "50%")),
     xlab="Cluster Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax),pch=0)
points(df_c50$n_individuals,df_c50$sw_tpe_dev_w,col="red",
       type="b",pch=3)
points(df_c50$n_individuals,df_c50$ks_tpe_nrsp_t,col="blue",type="b",pch=2)
points(df_c50$n_individuals,df_c50$ks_tpe_nrsp_w,col="red",type="b",pch=10)
abline(h = 0.05)

plot(df_c20$n_individuals,df_c20$sw_tpe_dev_t,type="b",
     main=expression(paste("Model Rejection Rate, Censoring Rate" %~~% "20%")),
     xlab="Cluster Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax),pch=0)
points(df_c20$n_individuals,df_c20$sw_tpe_dev_w,col="red",
       type="b",pch=3)
points(df_c20$n_individuals,df_c20$ks_tpe_nrsp_t,col="blue",type="b",pch=2)
points(df_c20$n_individuals,df_c20$ks_tpe_nrsp_w,col="red",type="b",pch=10)
abline(h = 0.05)

plot(df_c80$n_individuals,df_c80$sw_tpe_dev_t,type="b",
     main=expression(paste("Model Rejection Rate, Censoring Rate" %~~% "80%")),
     xlab="Cluster Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax),pch=0)
points(df_c80$n_individuals,df_c80$sw_tpe_dev_w,col="red",
       type="b",pch=3)
points(df_c80$n_individuals,df_c80$ks_tpe_nrsp_t,col="blue",type="b",pch=2)
points(df_c80$n_individuals,df_c80$ks_tpe_nrsp_w,col="red",type="b",pch=10)
abline(h = 0.05)
par(mar=c(0,0,0,0)) # Make the margins 0
plot(1, type = "n", axes=F, xlab="", ylab="") # Create empty plot
legend("center", c("Dev-SW, True","Dev-SW, Wrong","Z-KS, True","Z-KS, Wrong"), 
       horiz=FALSE,
       pch = c(0,3,2,10), 
       col=c("blue","red","blue","red"),xjust = 0.5)
dev.off()




pdf("nonlinear1-1.pdf",width=12,height=9)
par(mfrow = c(3,4))
par(mar=c(3.5, 3.5, 2, 1), mgp=c(2.4, 0.8, 0))
ymax=max(range(df_c20$sw_tpe_nrsp_t,df_c20$sw_tpe_nrsp_w,
               df_c20$sf_tpe_nrsp_t,df_c20$sf_tpe_nrsp_w,
               df_c20$sf_tpe_nusp_t,df_c20$sf_tpe_nusp_w,
               df_c20$anov_tpe_nrsp_t,df_c20$anov_tpe_nrsp_w))
ymin=min(range(df_c20$sw_tpe_nrsp_t,df_c20$sw_tpe_nrsp_w,
               df_c20$sf_tpe_nrsp_t,df_c20$sf_tpe_nrsp_w,
               df_c20$sf_tpe_nusp_t,df_c20$sf_tpe_nusp_w,
               df_c20$anov_tpe_nrsp_t,df_c20$anov_tpe_nrsp_w))

plot(df_c20$n,df_c20$sw_tpe_nrsp_t,type="b",
     main="Model Rej. Rate, SW-NRSP, 20%",
     xlab="Sample Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax))
points(df_c20$n,df_c20$sw_tpe_nrsp_w,col="red",
       type="b")
abline(h = 0.05)
legend(x = "bottom", inset = c(0, -0.18),
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")

plot(df_c20$n,df_c20$sf_tpe_nrsp_t,type="b",
     main="Model Rej. Rate, SF-NRSP, 20%",
     xlab="Sample Size",ylab="Model Rejection Rate",
     col="blue", ylim=c(ymin,ymax))
points(df_c20$n,df_c20$sf_tpe_nrsp_w,col="red",
       type="b")
abline(h = 0.05)
legend(x = "bottom", inset = c(0, -0.18),
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")

plot(df_c20$n,df_c20$sf_tpe_nusp_t,type="b",
     main="Model Rej. Rate, SF-NUSP, 20%",
     xlab="Sample Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax))
points(df_c20$n,df_c20$sf_tpe_nusp_w,col="red",
       type="b")
abline(h = 0.05)
legend(x = "bottom", inset = c(0, -0.18),
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")

plot(df_c20$n,df_c20$anov_tpe_nrsp_t,type="b",
     main="Model Rej. Rate, AOV-NRSP, 20%",
     xlab="Sample Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax))
points(df_c20$n,df_c20$anov_tpe_nrsp_w,col="red",
       type="b")
abline(h = 0.05)
legend(x = "bottom", inset = c(0, -0.18),
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")

##########second row ###################################################
ymax=max(range(df_c50$sw_tpe_nrsp_t,df_c50$sw_tpe_nrsp_w,
               df_c50$sf_tpe_nrsp_t,df_c50$sf_tpe_nrsp_w,
               df_c50$sf_tpe_nusp_t,df_c50$sf_tpe_nusp_w,
               df_c50$anov_tpe_nrsp_t,df_c50$anov_tpe_nrsp_w))
ymin=min(range(df_c50$sw_tpe_nrsp_t,df_c50$sw_tpe_nrsp_w,
               df_c50$sf_tpe_nrsp_t,df_c50$sf_tpe_nrsp_w,
               df_c50$sf_tpe_nusp_t,df_c50$sf_tpe_nusp_w,
               df_c50$anov_tpe_nrsp_t,df_c50$anov_tpe_nrsp_w))
plot(df_c50$n,df_c50$sw_tpe_nrsp_t,type="b",
     main="Model Rej. Rate, SW-NRSP, 50%",
     xlab="Sample Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax))
points(df_c50$n,df_c50$sw_tpe_nrsp_w,col="red",
       type="b")
abline(h = 0.05)
legend(x = "bottom", inset = c(0, -0.18),
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")

plot(df_c50$n,df_c50$sf_tpe_nrsp_t,type="b",
     main="Model Rej. Rate, SF-NRSP, 50%",
     xlab="Sample Size",ylab="Model Rejection Rate",
     col="blue", ylim=c(ymin,ymax))
points(df_c50$n,df_c50$sf_tpe_nrsp_w,col="red",
       type="b")
abline(h = 0.05)
legend(x = "bottom", inset = c(0, -0.18),
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")
dev.off()

pdf( "residualplot.pdf",width=12,height=6)
par(mfrow = c(2,4),mar=c(4,4,2,2))
ymax=max(range(resids_t$nrsp,resids_w$nrsp))
ymin=min(range(resids_t$nrsp,resids_w$nrsp))
#The plot of true model
plot(lp_t,resids_t$nrsp,ylab="Z-Residual",
     xlab="linear predictor",
     col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d+1],
     pch=c(3,2)[simulated_shared_frailty_data$d+1],
     main="True Model, Z Residual plot",ylim=c(ymin,ymax)) 
abline(h=c(3,-3),col="grey")
legend(x = "bottom", inset = c(0, -0.21), 
       legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")

lpred.bin <- cut(fit_coxph$linear.predictors, 10)
plot(lpred.bin,resids_t$nrsp,xlab="linear predictor",ylab="Z-Residual",
     main="True Model, Z Residual plot",ylim=c(ymin,ymax)) 


plot(log(simulated_shared_frailty_data$x2),
     resids_t$nrsp,ylab="Z-Residual",
     xlab=expression(paste(log(x[2]))),
     col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d+1],
     pch=c(3,2)[simulated_shared_frailty_data$d+1],
     main="True Model, Z Residual plot",ylim=c(ymin,ymax)) 
abline(h=c(3,-3),col="grey")
legend(x = "bottom", inset = c(0, -0.21), 
       legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")

x2_t <- cut(log(simulated_shared_frailty_data$x2), 10)
plot(x2_t,resids_t$nrsp,xlab=expression(paste(log(x[2]))),ylab="Z-Residual",
     main="True Model, Z Residual plot",ylim=c(ymin,ymax)) 


#The plot of wrong model
plot(lp_w,resids_t$nrsp,ylab="Z-Residual",
     xlab="linear predictor",
     col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d+1],
     pch=c(3,2)[simulated_shared_frailty_data$d+1],
     main="True Model, Z Residual plot",ylim=c(ymin,ymax)) 
abline(h=c(3,-3),col="grey")
legend(x = "bottom", inset = c(0, -0.21), 
       legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")


lpred.bin_w <- cut(fit_coxph_w$linear.predictors, 10)
plot(lpred.bin_w,resids_w$nrsp,xlab="linear predictor", 
     ylab="Z-Residual",
     main="Wrong Model, Z Residual plot",ylim=c(ymin,ymax)) 

plot(log(simulated_shared_frailty_data$x2),
     resids_w$nrsp,ylab="Z-Residual",
     xlab=expression(paste(log(x[2]))),
     col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d+1],
     pch=c(3,2)[simulated_shared_frailty_data$d+1],
     main="Wrong Model, Z Residual plot",ylim=c(ymin,ymax)) 
abline(h=c(3,-3),col="grey")
legend(x = "bottom", inset = c(0, -0.21), 
       legend = c("Uncensored", "Censored"),
       col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")

x2_w <- cut(log(simulated_shared_frailty_data$x2), 10)
plot(x2_w,resids_w$nrsp,xlab=expression(paste(log(x[2]))),ylab="Z-Residual",
     main="Wrong Model, Z Residual plot",ylim=c(ymin,ymax)) 

dev.off()

pdf( "qq_csplot.pdf",width=8,height=6)
par(mfrow = c(2,2),mar=c(4,4,2,2))
ymax1=max(range(resids_t$nrsp,resids_w$nrsp))
ymin1=min(range(resids_t$nrsp,resids_w$nrsp))
ymax2=max(range(km.ucs.t$cumhaz,km.ucs.w$cumhaz))
ymin2=min(range(km.ucs.t$cumhaz,km.ucs.w$cumhaz))
xmax2=max(range(km.ucs.t$time,km.ucs.w$time))
xmin2=min(range(km.ucs.t$time,km.ucs.w$time))
#The plot of true model
qqnorm(resids_t$nrsp,xlab="Theoretical Quantiles",
       ylab="Sample Quantiles",
       main=paste0("True Model, QQ plot, SW p-value = ", 
                   sprintf("%3.2f",sw_nrsp_t)), 
       ylim = c(ymin1,ymax1));qqline(resids_t$nrsp)
plot(km.ucs.t, fun="cumhaz", xlab="Unmodified Cox-Snell Residuals",
     ylab="Cumulative Hazard Function",
     main="True Model, Cum. Hazard of CS Residuals",
     ylim=c(ymin2,ymax2),xlim=c(xmin2,xmax2))
abline(0, 1, col="blue", lty=2)
points(km.ucs.t$time, -log(km.ucs.t$surv), 
       col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d[id.ucs.t]+1],
       pch=c(3,2)[simulated_shared_frailty_data$d[id.ucs.t]+1])
legend(x = "bottom", inset = c(0, -0.28), 
       legend = c("Uncensored", "Censored"), 
       col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")

#The plot of wrong model
qqnorm(resids_w$nrsp,xlab="Theoretical Quantiles", ylab="Sample Quantiles",
       main=paste0("Wrong Model, QQ plot, SW p-value = ",
                   sprintf("%3.2f",sw_nrsp_w)), 
       ylim = c(ymin1,ymax1));qqline(resids_w$nrsp)
plot(km.ucs.w, fun="cumhaz", xlab=("Unmodified Cox-Snell Residuals"),
     ylab="Cumulative Hazard Function",
     main="Wrong Model, Cum. Hazard of CS Residuals",
     ylim=c(ymin2,ymax2),xlim=c(xmin2,xmax2))
abline(0, 1, col="blue", lty=2)
points(km.ucs.w$time, -log(km.ucs.w$surv), 
       col=c("blue","darkolivegreen4")[simulated_shared_frailty_data$d[id.ucs.w]+1],
       pch=c(3,2)[simulated_shared_frailty_data$d[id.ucs.w]+1])
legend(x = "bottom", inset = c(0, -0.28), 
       legend = c("Uncensored", "Censored"),
       col=c("darkolivegreen4","blue"),
       pch=c(2,3),horiz=TRUE,cex=1,xpd = TRUE,bty="n")
dev.off()
plot(df_c50$n,df_c50$sf_tpe_nusp_t,type="b",
     main="Model Rej. Rate, SF-NUSP, 50%",
     xlab="Sample Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax))
points(df_c50$n,df_c50$sf_tpe_nusp_w,col="red",
       type="b")
abline(h = 0.05)
legend(x = "bottom", inset = c(0, -0.18),
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")

plot(df_c50$n,df_c50$anov_tpe_nrsp_t,type="b",
     main="Model Rej. Rate, AOV-NRSP, 50%",
     xlab="Sample Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax))
points(df_c50$n,df_c50$anov_tpe_nrsp_w,col="red",
       type="b")
abline(h = 0.05)
legend(x = "bottom", inset = c(0, -0.18),
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")
##########thrid row ###################################################
ymax=max(range(df_c80$sw_tpe_nrsp_t,df_c80$sw_tpe_nrsp_w,
               df_c80$sf_tpe_nrsp_t,df_c80$sf_tpe_nrsp_w,
               df_c80$sf_tpe_nusp_t,df_c80$sf_tpe_nusp_w,
               df_c80$anov_tpe_nrsp_t,df_c80$anov_tpe_nrsp_w))
ymin=min(range(df_c80$sw_tpe_nrsp_t,df_c80$sw_tpe_nrsp_w,
               df_c80$sf_tpe_nrsp_t,df_c80$sf_tpe_nrsp_w,
               df_c80$sf_tpe_nusp_t,df_c80$sf_tpe_nusp_w,
               df_c80$anov_tpe_nrsp_t,df_c80$anov_tpe_nrsp_w))
plot(df_c80$n,df_c80$sw_tpe_nrsp_t,type="b",
     main="Model Rej. Rate, SW-NRSP, 80%",
     xlab="Sample Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax))
points(df_c80$n,df_c80$sw_tpe_nrsp_w,col="red",
       type="b")
abline(h = 0.05)
legend(x = "bottom", inset = c(0, -0.18),
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")

plot(df_c80$n,df_c80$sf_tpe_nrsp_t,type="b",
     main="Model Rej. Rate, SF-NRSP, 80%",
     xlab="Sample Size",ylab="Model Rejection Rate",
     col="blue", ylim=c(ymin,ymax))
points(df_c80$n,df_c80$sf_tpe_nrsp_w,col="red",
       type="b")
abline(h = 0.05)
legend(x = "bottom", inset = c(0, -0.18),
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")

plot(df_c80$n,df_c80$sf_tpe_nusp_t,type="b",
     main="Model Rej. Rate, SF-NUSP, 80%",
     xlab="Sample Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax))
points(df_c80$n,df_c80$sf_tpe_nusp_w,col="red",
       type="b")
abline(h = 0.05)
legend(x = "bottom", inset = c(0, -0.18),
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")

plot(df_c80$n,df_c80$anov_tpe_nrsp_t,type="b",
     main="Model Rej. Rate, AOV-NRSP, 80%",
     xlab="Sample Size",ylab="Model Rejection Rate",
     col="blue",ylim=c(ymin,ymax))
points(df_c80$n,df_c80$anov_tpe_nrsp_w,col="red",
       type="b")
abline(h = 0.05)
legend(x = "bottom", inset = c(0, -0.18),
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")
dev.off()


#################  AIC   #########
pdf(sprintf ("aic_c%g.pdf",c),width=6,height=3)
par(mfrow = c(1,2))
par(mar=c(3.5, 3.5, 2, 1), mgp=c(2.4, 0.8, 0))
ymax=max(range(df_c$aic_t,df_c$aic_w,df1_c$aic_t,df1_c$aic_w))
ymin=min(range(df_c$aic_t,df_c$aic_w,df1_c$aic_t,df1_c$aic_w))
plot(df_c$n,df_c$aic_t,type="b",
     main="AIC, Increse Cluster Size",
     ylab="AIC",xlab="Sample Size",
     col="blue",lwd = 2,
     ylim=c(ymin,ymax))
points(df_c$n,df_c$aic_w,type="b",
       col="red",lwd = 2)
legend(x = "bottom", inset = c(0, -0.18), 
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")

plot(df1_c$n,df1_c$aic_t,type="b",
     main="AIC, Increse Cluster Number",
     ylab="AIC",xlab="Sample Size",
     col="blue",lwd = 2,
     ylim=c(ymin,ymax))
points(df1_c$n,df1_c$aic_w,type="b",
       col="red",lwd = 2)
legend(x = "bottom", inset = c(0, -0.18), 
       legend=c("True","Wrong"), col=c("blue","red"),
       pch=1,horiz=TRUE,cex=1,xpd = TRUE,bty="n")
dev.off()

# group_para1 <- data.frame(
#   n_clusters = c(10,10,10,20,20,20,30,30,30,40,40,40,50,50,50,
#                  60,60,60,70,70,70,80,80,80,90,90,90,100,100,100),
#   n_individuals = c(30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,
#                     30,30,30,30,30,30,30,30,30,30,30,30,30,30,30),
#   c=rep(c(20,50,80),times=10)
# )
group_para1 <- data.frame(
  n_clusters = c(10,10,10,20,20,20,30,30,30,40,40,40,50,50,50,
                 60,60,60,70,70,70,80,80,80,90,90,90,100,100,100),
  n_individuals = c(20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,
                    20,20,20,20,20,20,20,20,20,20,20,20,20,20,20),
  c=rep(c(20,50,80),times=10)
)

group_para1$n<- group_para1$n_clusters *group_para1$n_individuals  
df1<-data.frame(group_para1,df_nonlinear)
rm(df_nonlinear,group_para1)

df_c20<-df1[c(1,4,7,10,13,16,19,22,25,28),]
df_c50<-df1[c(2,5,8,11,14,17,20,23,26,29),]
df_c80<-df1[c(3,6,9,12,15,18,21,24,27,30),]
