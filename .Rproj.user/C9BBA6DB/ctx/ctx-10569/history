library(Zresidual)
library(survival)
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
is.factor(LeukSurv$district)
is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
#############fit the coxph model with frailty#################
fit_LeukSurv <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
#############Calculate residuals###############################
allresid.LeukSurv<-Zresidual(fit.object = fit_LeukSurv,data= LeukSurv)
#Z-residual
Zresid.LeukSurv<-allresid.LeukSurv$Zresid
#censored Z-residual
censored.Zresid.LeukSurv<-allresid.LeukSurv$censored.Zresid
#Survival Probabilities
sp.LeukSurv<-allresid.LeukSurv$SP
#unmodified CS residuals
ucs.LeukSurv<-allresid.LeukSurv$ucs
#modified CS residuals
mcs.LeukSurv<-allresid.LeukSurv$mcs
#Martingale residuals
martg.LeukSurv<-allresid.LeukSurv$martg
#Deviance residuals
dev.LeukSurv<-allresid.LeukSurv$dev
########################### Graphical Diagnosis##################
plot.zresid(Zresid.LeukSurv)
plot.zresid.fitted.value(Zresid.LeukSurv,
fitted.values=fit_LeukSurv$linear.predictors,
xlab="Linear Predictor",
cenered=LeukSurv$cens)
qqnorm.zresid (Zresid.LeukSurv)
boxplot.zresid(Zresid.LeukSurv,fitted.values=LeukSurv$wbc)
boxplot.zresid(Zresid.LeukSurv,fitted.values=LeukSurv$sex)
########################### other residuals Graphical Diagnosis ##################
##unmodified CS residuals
km.ln.LeukSurv <- survfit(Surv(ucs.LeukSurv, LeukSurv$cens)~1,type='fleming')
id.ln.LeukSurv<-order(ucs.LeukSurv)
plot(km.ln.LeukSurv, fun="cumhaz", xlab=("Cox-Snell Residuals"),
ylab=("Cumulative Hazard Function"),
main="Log-normal, Cum. Hazard of CS Residuals",
ylim= c(0,4),xlim=c(0,4))
abline(0, 1, col="red", lty=2)
points(km.ln.LeukSurv$time, -log(km.ln.LeukSurv$surv),
col=c("blue","darkolivegreen4")[LeukSurv$cens[id.ln.LeukSurv]+1],
pch=c(3,2)[LeukSurv$cens[id.ln.LeukSurv]+1] )
legend(x = "topleft",
legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="L")
#Martingale residuals
plot(LeukSurv$age_at_onset,martg.LeukSurv,ylab="Martingale",
xlab="age",
main="Martingale Residual Plot",
col=c("blue","darkolivegreen4")[LeukSurv$cens+1],
pch=c(3,2)[LeukSurv$cens+1])
#Martingale residuals
plot(LeukSurv$age,martg.LeukSurv,ylab="Martingale",
xlab="age",
main="Martingale Residual Plot",
col=c("blue","darkolivegreen4")[LeukSurv$cens+1],
pch=c(3,2)[LeukSurv$cens+1])
#abline(h=c(3,-3),col="grey")
lines(lowess(martg.LeukSurv~ LeukSurv$age),
col = "red",lwd = 3)
legend(x = "bottomright",
legend = c("Uncensored", "Censored"),
col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="l")
#Deviance residuals
plot(LeukSurv$age ,dev.LeukSurv,ylab="Deviance",
xlab="size",
main="Deviance Residual Plot",
col=c("blue","darkolivegreen4")[LeukSurv$cens+1],
pch=c(3,2)[LeukSurv$cens+1])
#abline(h=c(3,-3),col="grey")
lines(lowess(dev.LeukSurv~ LeukSurv$age),
col = "red",lwd = 3)
legend(x = "bottomright",
legend = c("Uncensored", "Censored"),
col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="l")
library(Zresidual)
library(Zresidual)
library(survival)
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
is.factor(LeukSurv$district)
is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
#############fit the coxph model with frailty#################
fit_LeukSurv <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
#############Calculate residuals###############################
allresid.LeukSurv<-Zresidual(fit.object = fit_LeukSurv,data= LeukSurv)
#Z-residual
Zresid.LeukSurv<-allresid.LeukSurv$Zresid
#censored Z-residual
censored.Zresid.LeukSurv<-allresid.LeukSurv$censored.Zresid
#Survival Probabilities
sp.LeukSurv<-allresid.LeukSurv$SP
#unmodified CS residuals
ucs.LeukSurv<-allresid.LeukSurv$ucs
#modified CS residuals
mcs.LeukSurv<-allresid.LeukSurv$mcs
#Martingale residuals
martg.LeukSurv<-allresid.LeukSurv$martg
#Deviance residuals
dev.LeukSurv<-allresid.LeukSurv$dev
########################### Graphical Diagnosis##################
plot.zresid(Zresid.LeukSurv)
plot.zresid.fitted.value(Zresid.LeukSurv,
fitted.values=fit_LeukSurv$linear.predictors,
xlab="Linear Predictor",
cenered=LeukSurv$cens)
qqnorm.zresid (Zresid.LeukSurv)
boxplot.zresid(Zresid.LeukSurv,fitted.values=LeukSurv$wbc)
boxplot.zresid(Zresid.LeukSurv,fitted.values=LeukSurv$sex)
########################### other residuals Graphical Diagnosis ##################
##unmodified CS residuals
km.ln.LeukSurv <- survfit(Surv(ucs.LeukSurv, LeukSurv$cens)~1,type='fleming')
id.ln.LeukSurv<-order(ucs.LeukSurv)
plot(km.ln.LeukSurv, fun="cumhaz", xlab=("Cox-Snell Residuals"),
ylab=("Cumulative Hazard Function"),
main="Log-normal, Cum. Hazard of CS Residuals",
ylim= c(0,4),xlim=c(0,4))
abline(0, 1, col="red", lty=2)
points(km.ln.LeukSurv$time, -log(km.ln.LeukSurv$surv),
col=c("blue","darkolivegreen4")[LeukSurv$cens[id.ln.LeukSurv]+1],
pch=c(3,2)[LeukSurv$cens[id.ln.LeukSurv]+1] )
legend(x = "topleft",
legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="L")
#Martingale residuals
plot(LeukSurv$age,martg.LeukSurv,ylab="Martingale",
xlab="age",
main="Martingale Residual Plot",
col=c("blue","darkolivegreen4")[LeukSurv$cens+1],
pch=c(3,2)[LeukSurv$cens+1])
#abline(h=c(3,-3),col="grey")
lines(lowess(martg.LeukSurv~ LeukSurv$age),
col = "red",lwd = 3)
legend(x = "bottomright",
legend = c("Uncensored", "Censored"),
col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="l")
#Deviance residuals
plot(LeukSurv$age ,dev.LeukSurv,ylab="Deviance",
xlab="size",
main="Deviance Residual Plot",
col=c("blue","darkolivegreen4")[LeukSurv$cens+1],
pch=c(3,2)[LeukSurv$cens+1])
#abline(h=c(3,-3),col="grey")
lines(lowess(dev.LeukSurv~ LeukSurv$age),
col = "red",lwd = 3)
legend(x = "bottomright",
legend = c("Uncensored", "Censored"),
col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="l")
library(Zresidual)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
is.factor(LeukSurv$district)
is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
library(Zresidual)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
is.factor(LeukSurv$district)
is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
library(Zresidual)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
is.factor(LeukSurv$district)
is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
fit_LeukSurv <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
allresid.LeukSurv<-Zresidual(fit.object = fit_LeukSurv,data= LeukSurv)
#Z-residual
Zresid.LeukSurv<-allresid.LeukSurv$Zresid
#censored Z-residual
censored.Zresid.LeukSurv<-allresid.LeukSurv$censored.Zresid
#Survival Probabilities
sp.LeukSurv<-allresid.LeukSurv$SP
#unmodified CS residuals
ucs.LeukSurv<-allresid.LeukSurv$ucs
#modified CS residuals
mcs.LeukSurv<-allresid.LeukSurv$mcs
#Martingale residuals
martg.LeukSurv<-allresid.LeukSurv$martg
#Deviance residuals
dev.LeukSurv<-allresid.LeukSurv$dev
qqnorm.zresid (Zresid.LeukSurv)
plot.zresid(Zresid.LeukSurv)
plot.zresid.fitted.value(Zresid.LeukSurv,
fitted.values=fit_LeukSurv$linear.predictors,
xlab="Linear Predictor",
cenered=LeukSurv$cens)
boxplot.zresid(Zresid.LeukSurv,fitted.values=fit_LeukSurv$linear.predictors)
plot.zresid.fitted.value(Zresid.LeukSurv,
fitted.values=fitted.values=LeukSurv$wbc,
plot.zresid.fitted.value(Zresid.LeukSurv,
fitted.values=LeukSurv$wbc,
xlab="wbc",
cenered=LeukSurv$cens)
boxplot.zresid(Zresid.LeukSurv,fitted.values=LeukSurv$wbc)
boxplot.zresid(Zresid.LeukSurv,fitted.values=LeukSurv$sex)
sw.test.zresid(Zresid.LeukSurv)
sf.test.zresid(Zresid.LeukSurv)
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv,censored=LeukSurv$cens)
anov.test.zresid(Zresid.LeukSurv,fitted.values=fit_LeukSurv$linear.predictors, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv,fitted.values=fit_LeukSurv$linear.predictors, k.bl=10)
anov.test.zresid(Zresid.LeukSurv,fitted.values=LeukSurv$wbc, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv,fitted.values=LeukSurv$wbc, k.bl=10)
anov.test.zresid(Zresid.LeukSurv,fitted.values=LeukSurv$sex, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv,fitted.values=LeukSurv$sex, k.bl=10)
##unmodified CS residuals
km.ln.LeukSurv <- survfit(Surv(ucs.LeukSurv, LeukSurv$cens)~1,type='fleming')
id.ln.LeukSurv<-order(ucs.LeukSurv)
plot(km.ln.LeukSurv, fun="cumhaz", xlab=("Cox-Snell Residuals"),
ylab=("Cumulative Hazard Function"),
main="Log-normal, Cum. Hazard of CS Residuals",
ylim= c(0,4),xlim=c(0,4))
abline(0, 1, col="red", lty=2)
points(km.ln.LeukSurv$time, -log(km.ln.LeukSurv$surv),
col=c("blue","darkolivegreen4")[LeukSurv$cens[id.ln.LeukSurv]+1],
pch=c(3,2)[LeukSurv$cens[id.ln.LeukSurv]+1] )
legend(x = "topleft",
legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="L")
#Martingale residuals
plot(LeukSurv$wbc,martg.LeukSurv,ylab="Martingale",
xlab="wbc",
main="Martingale Residual Plot",
col=c("blue","darkolivegreen4")[LeukSurv$cens+1],
pch=c(3,2)[LeukSurv$cens+1])
#abline(h=c(3,-3),col="grey")
lines(lowess(martg.LeukSurv~ LeukSurv$wbc),
col = "red",lwd = 3)
legend(x = "bottomright",
legend = c("Uncensored", "Censored"),
col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="l")
#Deviance residuals
plot(LeukSurv$wbc ,dev.LeukSurv,ylab="Deviance",
xlab="wbc",
main="Deviance Residual Plot",
col=c("blue","darkolivegreen4")[LeukSurv$cens+1],
pch=c(3,2)[LeukSurv$cens+1])
#abline(h=c(3,-3),col="grey")
lines(lowess(dev.LeukSurv~ LeukSurv$wbc),
col = "red",lwd = 3)
legend(x = "bottomright",
legend = c("Uncensored", "Censored"),
col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="l")
n_sims<-1000
cur_time = proc.time()
sw.LeukSurv<- rep(0,n_sims)
sf.LeukSurv<- rep(0,n_sims)
anov.LeukSurv.lp<- rep(0,n_sims)
anov.LeukSurv.wbc<- rep(0,n_sims)
for(j in 1:n_sims ){
cat(paste('Simulation ',j,' out of ',n_sims,'\n'))
if(j ==2){
elapsed=as.numeric(proc.time()-cur_time)[3]
cat(paste("Time for 1 simulation: ",elapsed/3600," hours \n"))
cat(paste("Estimated time remaining: ",elapsed/3600*(n_sims-1)," hours \n"))
}
allresid.LeukSurv<-Zresidual(fit.object = fit_LeukSurv,data= LeukSurv)
Zresid.LeukSurv<-allresid.LeukSurv$Zresid
sw.LeukSurv[j]<-sw.test.zresid(Zresid.LeukSurv)
sf.LeukSurv[j]<-sf.test.zresid(Zresid.LeukSurv)
anov.LeukSurv.lp[j]<-anov.test.zresid(Zresid.LeukSurv,
fitted.values=fit_LeukSurv$linear.predictors,
k.anova=10)
anov.LeukSurv.wbc[j]<-anov.test.zresid(Zresid.LeukSurv,
fitted.values=LeukSurv$wbc,
k.anova=10)
}
pmin.sw.LeukSurv<-bounds_pvalues(pv=sw.LeukSurv);pmin.sw.LeukSurv
pmin.sf.LeukSurv<-bounds_pvalues(pv=sf.LeukSurv);pmin.sf.LeukSurv
pmin.aov.lp.LeukSurv<-bounds_pvalues(pv=anov.LeukSurv.lp);pmin.aov.lp.LeukSurv
pmin.aov.wbc.LeukSurv<-bounds_pvalues(pv=anov.LeukSurv.wbc);pmin.aov.wbc.LeukSurv
par(mfrow = c(2,2),mar=c(4,4,2,2))
hist(sw.LeukSurv,main="Replicated Z-SW P-values",breaks=20,
xlab="Z-SW P-values")
abline(v=pmin.sw.LeukSurv,col="red")
hist(sf.LeukSurv,main="Replicated Z-SF P-values",breaks=20,
xlab="Z-SF P-values")
abline(v=pmin.sf.LeukSurv,col="red")
hist(anov.LeukSurv.lp,main="Replicated Z-AOV with LP P-values",breaks=20,
xlab="Z-AOV with LP P-values")
abline(v=pmin.aov.lp.LeukSurv,col="red")
hist(anov.LeukSurv.wbc,main="Replicated Z-AOV with wbc P-values",breaks=20,
xlab="Z-AOV with wbc P-values",xlim=c(xmin1,xmax1))
par(mfrow = c(2,2),mar=c(4,4,2,2))
hist(sw.LeukSurv,main="Replicated Z-SW P-values",breaks=20,
xlab="Z-SW P-values")
abline(v=pmin.sw.LeukSurv,col="red")
hist(sf.LeukSurv,main="Replicated Z-SF P-values",breaks=20,
xlab="Z-SF P-values")
abline(v=pmin.sf.LeukSurv,col="red")
hist(anov.LeukSurv.lp,main="Replicated Z-AOV with LP P-values",breaks=20,
xlab="Z-AOV with LP P-values")
abline(v=pmin.aov.lp.LeukSurv,col="red")
hist(anov.LeukSurv.wbc,main="Replicated Z-AOV with wbc P-values",breaks=20,
xlab="Z-AOV with wbc P-values")
abline(v=pmin.aov.wbc.LeukSurv,col="red")
n_sims<-1000
cur_time = proc.time()
sw.LeukSurv<- rep(0,n_sims)
sf.LeukSurv<- rep(0,n_sims)
anov.LeukSurv.lp<- rep(0,n_sims)
anov.LeukSurv.wbc<- rep(0,n_sims)
for(j in 1:n_sims ){
allresid.LeukSurv<-Zresidual(fit.object = fit_LeukSurv,data= LeukSurv)
Zresid.LeukSurv<-allresid.LeukSurv$Zresid
sw.LeukSurv[j]<-sw.test.zresid(Zresid.LeukSurv)
sf.LeukSurv[j]<-sf.test.zresid(Zresid.LeukSurv)
anov.LeukSurv.lp[j]<-anov.test.zresid(Zresid.LeukSurv,
fitted.values=fit_LeukSurv$linear.predictors,
k.anova=10)
anov.LeukSurv.wbc[j]<-anov.test.zresid(Zresid.LeukSurv,
fitted.values=LeukSurv$wbc,
k.anova=10)
}
pmin.sw.LeukSurv<-bounds_pvalues(pv=sw.LeukSurv);pmin.sw.LeukSurv
pmin.sf.LeukSurv<-bounds_pvalues(pv=sf.LeukSurv);pmin.sf.LeukSurv
pmin.aov.lp.LeukSurv<-bounds_pvalues(pv=anov.LeukSurv.lp);pmin.aov.lp.LeukSurv
pmin.aov.wbc.LeukSurv<-bounds_pvalues(pv=anov.LeukSurv.wbc);pmin.aov.wbc.LeukSurv
par(mfrow = c(2,2),mar=c(4,4,2,2))
hist(sw.LeukSurv,main="Replicated Z-SW P-values",breaks=20,
xlab="Z-SW P-values")
abline(v=pmin.sw.LeukSurv,col="red")
hist(sf.LeukSurv,main="Replicated Z-SF P-values",breaks=20,
xlab="Z-SF P-values")
abline(v=pmin.sf.LeukSurv,col="red")
hist(anov.LeukSurv.lp,main="Replicated Z-AOV with LP P-values",breaks=20,
xlab="Z-AOV with LP P-values")
abline(v=pmin.aov.lp.LeukSurv,col="red")
hist(anov.LeukSurv.wbc,main="Replicated Z-AOV with wbc P-values",breaks=20,
xlab="Z-AOV with wbc P-values")
abline(v=pmin.aov.wbc.LeukSurv,col="red")
allresid.LeukSurv<-Zresidual(fit.object = fit_LeukSurv,data= LeukSurv)
#Z-residual
Zresid.LeukSurv<-allresid.LeukSurv$Zresid
#censored Z-residual
censored.Zresid.LeukSurv<-allresid.LeukSurv$censored.Zresid
#Survival Probabilities
sp.LeukSurv<-allresid.LeukSurv$SP
#unmodified CS residuals
ucs.LeukSurv<-allresid.LeukSurv$ucs
#modified CS residuals
mcs.LeukSurv<-allresid.LeukSurv$mcs
#Martingale residuals
martg.LeukSurv<-allresid.LeukSurv$martg
#Deviance residuals
dev.LeukSurv<-allresid.LeukSurv$dev
allresid.LeukSurv<-Zresidual(fit.object = fit_LeukSurv,data= LeukSurv)
#Z-residual
Zresid.LeukSurv<-allresid.LeukSurv$Zresid
#censored Z-residual
censored.Zresid.LeukSurv<-allresid.LeukSurv$censored.Zresid
#Survival Probabilities
sp.LeukSurv<-allresid.LeukSurv$SP
#unmodified CS residuals
ucs.LeukSurv<-allresid.LeukSurv$ucs
#modified CS residuals
mcs.LeukSurv<-allresid.LeukSurv$mcs
#Martingale residuals
martg.LeukSurv<-allresid.LeukSurv$martg
#Deviance residuals
dev.LeukSurv<-allresid.LeukSurv$dev
allresid.LeukSurv<-Zresidual(fit.object=fit_LeukSurv,data= LeukSurv)
#Z-residual
Zresid.LeukSurv<-allresid.LeukSurv$Zresid;Zresid.LeukSurv
#censored Z-residual
censored.Zresid.LeukSurv<-allresid.LeukSurv$censored.Zresid
#Survival Probabilities
sp.LeukSurv<-allresid.LeukSurv$SP
#unmodified CS residuals
ucs.LeukSurv<-allresid.LeukSurv$ucs
#modified CS residuals
mcs.LeukSurv<-allresid.LeukSurv$mcs
#Martingale residuals
martg.LeukSurv<-allresid.LeukSurv$martg
#Deviance residuals
dev.LeukSurv<-allresid.LeukSurv$dev
library(Zresidual)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
is.factor(LeukSurv$district)
is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
fit_LeukSurv <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
allresid.LeukSurv<-Zresidual(fit.object=fit_LeukSurv,data= LeukSurv)
#Z-residual
Zresid.LeukSurv<-allresid.LeukSurv$Zresid;Zresid.LeukSurv
#censored Z-residual
censored.Zresid.LeukSurv<-allresid.LeukSurv$censored.Zresid
#Survival Probabilities
sp.LeukSurv<-allresid.LeukSurv$SP
#unmodified CS residuals
ucs.LeukSurv<-allresid.LeukSurv$ucs
#modified CS residuals
mcs.LeukSurv<-allresid.LeukSurv$mcs
#Martingale residuals
martg.LeukSurv<-allresid.LeukSurv$martg
#Deviance residuals
dev.LeukSurv<-allresid.LeukSurv$dev
allresid.LeukSurv<-Zresidual(fit.object=fit_LeukSurv,data= LeukSurv)
#Z-residual
Zresid.LeukSurv<-allresid.LeukSurv$Zresid;Zresid.LeukSurv
#censored Z-residual
censored.Zresid.LeukSurv<-allresid.LeukSurv$censored.Zresid
#Survival Probabilities
sp.LeukSurv<-allresid.LeukSurv$SP
#unmodified CS residuals
ucs.LeukSurv<-allresid.LeukSurv$ucs
#modified CS residuals
mcs.LeukSurv<-allresid.LeukSurv$mcs
#Martingale residuals
martg.LeukSurv<-allresid.LeukSurv$martg
#Deviance residuals
dev.LeukSurv<-allresid.LeukSurv$dev
fit.object<-fit_LeukSurv
# Required packages:
if (!requireNamespace("pacman")) {install.packages("pacman")}
pacman::p_load("survival", "stringr")
form<-fit.object$call
form
get_object_name<-gsub(".*[(]([^.]+)[,].*", "\\1", form)[1]
get_object_name
library(Zresidual)
fit_LeukSurv <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
allresid.LeukSurv<-Zresidual(fit.object=fit_LeukSurv,data= LeukSurv)
allresid.LeukSurv<-Zresidual(fit.object=fit_LeukSurv,data= LeukSurv)
allresid.LeukSurv<-Zresidual(fit.object=fit_LeukSurv,data= LeukSurv)
allresid.LeukSurv<-Zresidual(fit.object=fit_LeukSurv,data= LeukSurv)
#Z-residual
Zresid.LeukSurv<-allresid.LeukSurv$Zresid;Zresid.LeukSurv
#censored Z-residual
censored.Zresid.LeukSurv<-allresid.LeukSurv$censored.Zresid
#Survival Probabilities
sp.LeukSurv<-allresid.LeukSurv$SP
#unmodified CS residuals
ucs.LeukSurv<-allresid.LeukSurv$ucs
#modified CS residuals
mcs.LeukSurv<-allresid.LeukSurv$mcs
#Martingale residuals
martg.LeukSurv<-allresid.LeukSurv$martg
#Deviance residuals
dev.LeukSurv<-allresid.LeukSurv$dev
