error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv_logwbc  <- tryCatch(
coxph(Surv(time, cens) ~ age +sex + logwbc + tpi +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
if (any(is.na(fit_LeukSurv_wbc)) || any(is.na(fit_LeukSurv_logwbc))) stop("An error or warning has occurred during the model fitting process.")
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
Zresid.LeukSurv.logwbc
print(as.vector(Zresid.LeukSurv.wbc))
print.residuals <- function(x){
x<-print(as.vector(x))
x
}
library(Zresidual)
library(Zresidual)
library(survival)
library(EnvStats)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
#is.factor(LeukSurv$district)
#is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
LeukSurv$logwbc<- log(LeukSurv$wbc+0.001)
fit_LeukSurv_wbc <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv_logwbc  <- tryCatch(
coxph(Surv(time, cens) ~ age +sex + logwbc + tpi +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
if (any(is.na(fit_LeukSurv_wbc)) || any(is.na(fit_LeukSurv_logwbc))) stop("An error or warning has occurred during the model fitting process.")
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
View(Zresid.LeukSurv.logwbc)
View(Zresid.LeukSurv.logwbc)
Zresid.LeukSurv.logwbc
library(Zresidual)
library(survival)
library(EnvStats)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
#is.factor(LeukSurv$district)
#is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
LeukSurv$logwbc<- log(LeukSurv$wbc+0.001)
fit_LeukSurv_wbc <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv_logwbc  <- tryCatch(
coxph(Surv(time, cens) ~ age +sex + logwbc + tpi +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
if (any(is.na(fit_LeukSurv_wbc)) || any(is.na(fit_LeukSurv_logwbc))) stop("An error or warning has occurred during the model fitting process.")
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
View(Zresid.LeukSurv.wbc)
Zresid.LeukSurv.wbc
par(mfrow = c(2,2),mar=c(4,4,1.5,2))
plot.zresid(Zresid.LeukSurv.wbc,
fitted.values=fit_LeukSurv_wbc$linear.predictors,
xlab="Linear Predictor",
main.title = "Z-residual Scatterplot of wbc model")
plot.zresid(Zresid.LeukSurv.logwbc,
fitted.values=fit_LeukSurv_logwbc$linear.predictors,
xlab="Linear Predictor",
main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors,
main.title = "Z-residual Boxplot of wbc model",xlab="Linear Predictor")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors,
main.title = "Z-residual Boxplot of lwbc model",xlab="Linear Predictor")
par(mfrow = c(1,2),mar=c(4,4,2,2))
qqnorm.zresid (Zresid.LeukSurv.wbc,main.title = "Z-residual QQ plot of wbc model")
qqnorm.zresid (Zresid.LeukSurv.logwbc,main.title = "Z-residual QQ plot of lwbc model")
plot(Zresid.LeukSurv.wbc)
par(mfrow = c(2,2),mar=c(4,4,1.5,2))
plot.zresid(Zresid.LeukSurv.wbc,
fitted.values=LeukSurv$wbc,
xlab="wbc",main.title = "Z-residual Scatterplot of wbc model")
plot.zresid(Zresid.LeukSurv.logwbc,
fitted.values=LeukSurv$logwbc,
xlab="log(wbc)",main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc,main.title = "Z-residual Boxplot of wbc model",xlab="wbc")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc,main.title = "Z-residual Boxplot of wbc model", xlab="log(wbc)")
par(mfrow = c(2,2),mar=c(4,4,1.5,2))
plot.zresid(Zresid.LeukSurv.wbc,
fitted.values=LeukSurv$wbc,
xlab="wbc",main.title = "Z-residual Scatterplot of wbc model")
plot.zresid(Zresid.LeukSurv.logwbc,
fitted.values=LeukSurv$logwbc,
xlab="log(wbc)",main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc,main.title = "Z-residual Boxplot of wbc model",xlab="wbc")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc,main.title = "Z-residual Boxplot of wbc model", xlab="log(wbc)")
par(mfrow = c(1,2))
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$sex,xlab="sex",main.title = "Z-residual Boxplot of wbc model")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$sex,xlab="sex",main.title = "Z-residual Boxplot of lwbc model")
sw.test.zresid(Zresid.LeukSurv.wbc)
sw.test.zresid(Zresid.LeukSurv.logwbc)
sf.test.zresid(Zresid.LeukSurv.wbc)
sf.test.zresid(Zresid.LeukSurv.logwbc)
anov.test.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors, k.anova=10)
anov.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors, k.bl=10)
bartlett.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors, k.bl=10)
anov.test.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc, k.anova=10)
anov.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc, k.bl=10)
bartlett.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc, k.bl=10)
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
censored.Zresid.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type="censored Z-residual")
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv.wbc)
View(censored.Zresid.LeukSurv.logwbc)
print(as.vector(censored.Zresid.LeukSurv.logwbc))
as.vector(censored.Zresid.LeukSurv.logwbc)
censored.Zresid.LeukSurv.logwbc
library(Zresidual)
library(Zresidual)
library(survival)
library(EnvStats)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
#is.factor(LeukSurv$district)
#is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
LeukSurv$logwbc<- log(LeukSurv$wbc+0.001)
fit_LeukSurv_wbc <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv_logwbc  <- tryCatch(
coxph(Surv(time, cens) ~ age +sex + logwbc + tpi +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
if (any(is.na(fit_LeukSurv_wbc)) || any(is.na(fit_LeukSurv_logwbc))) stop("An error or warning has occurred during the model fitting process.")
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
View(Zresid.LeukSurv.logwbc)
Zresid.LeukSurv.logwbc
View(Zresid.LeukSurv.wbc)
View(Zresid.LeukSurv.logwbc)
library(Zresidual)
library(Zresidual)
library(survival)
library(EnvStats)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
#is.factor(LeukSurv$district)
#is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
LeukSurv$logwbc<- log(LeukSurv$wbc+0.001)
fit_LeukSurv_wbc <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv_logwbc  <- tryCatch(
coxph(Surv(time, cens) ~ age +sex + logwbc + tpi +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
if (any(is.na(fit_LeukSurv_wbc)) || any(is.na(fit_LeukSurv_logwbc))) stop("An error or warning has occurred during the model fitting process.")
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
View(Zresid.LeukSurv.logwbc)
Zresid.LeukSurv.wbc
par(mfrow = c(1,2),mar=c(4,4,2,2))
qqnorm.zresid (Zresid.LeukSurv.wbc,main.title = "Z-residual QQ plot of wbc model")
qqnorm.zresid (Zresid.LeukSurv.logwbc,main.title = "Z-residual QQ plot of lwbc model")
par(mfrow = c(2,2),mar=c(4,4,1.5,2))
plot.zresid(Zresid.LeukSurv.wbc,
fitted.values=fit_LeukSurv_wbc$linear.predictors,
xlab="Linear Predictor",
main.title = "Z-residual Scatterplot of wbc model")
plot.zresid(Zresid.LeukSurv.logwbc,
fitted.values=fit_LeukSurv_logwbc$linear.predictors,
xlab="Linear Predictor",
main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors,
main.title = "Z-residual Boxplot of wbc model",xlab="Linear Predictor")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors,
main.title = "Z-residual Boxplot of lwbc model",xlab="Linear Predictor")
par(mfrow = c(2,2),mar=c(4,4,1.5,2))
plot.zresid(Zresid.LeukSurv.wbc,
fitted.values=LeukSurv$wbc,
xlab="wbc",main.title = "Z-residual Scatterplot of wbc model")
plot.zresid(Zresid.LeukSurv.logwbc,
fitted.values=LeukSurv$logwbc,
xlab="log(wbc)",main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc,main.title = "Z-residual Boxplot of wbc model",xlab="wbc")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc,main.title = "Z-residual Boxplot of wbc model", xlab="log(wbc)")
par(mfrow = c(1,2))
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$sex,xlab="sex",main.title = "Z-residual Boxplot of wbc model")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$sex,xlab="sex",main.title = "Z-residual Boxplot of lwbc model")
sw.test.zresid(Zresid.LeukSurv.wbc)
sw.test.zresid(Zresid.LeukSurv.logwbc)
sf.test.zresid(Zresid.LeukSurv.wbc)
sf.test.zresid(Zresid.LeukSurv.logwbc)
anov.test.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors, k.anova=10)
anov.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors, k.bl=10)
bartlett.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors, k.bl=10)
anov.test.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc, k.anova=10)
anov.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc, k.bl=10)
bartlett.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc, k.bl=10)
attributes(Zresid.LeukSurv.wbc)
print(typeof(fit_LeukSurv_wbc))
print(typeof(Zresid.LeukSurv.logwbc))
class(Zresid.LeukSurv.logwbc)
names(Zresid.LeukSurv.logwbc)
print.Zresidual(Zresid.LeukSurv.logwbc)
library(Zresidual)
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
Zresid.LeukSurv.wbc
isClass(Zresid.LeukSurv.logwbc)
library(Zresidual)
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
Zresid.LeukSurv.wbc
library(Zresidual)
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
Zresid.LeukSurv.wbc
Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
class(Zresid.LeukSurv.logwbc)
library(Zresidual)
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
Zresid.LeukSurv.wbc
print.Zresidual <- function(x){
x<-print(as.vector(x))
}
print.Zresidual(Zresid.LeukSurv.logwbc)
library(Zresidual)
library(Zresidual)
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
Zresid.LeukSurv.wbc
library(Zresidual)
library(Zresidual)
library(survival)
library(EnvStats)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
#is.factor(LeukSurv$district)
#is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
LeukSurv$logwbc<- log(LeukSurv$wbc+0.001)
fit_LeukSurv_wbc <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv_logwbc  <- tryCatch(
coxph(Surv(time, cens) ~ age +sex + logwbc + tpi +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
if (any(is.na(fit_LeukSurv_wbc)) || any(is.na(fit_LeukSurv_logwbc))) stop("An error or warning has occurred during the model fitting process.")
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
View(Zresid.LeukSurv.logwbc)
Zresid.LeukSurv.logwbc
library(Zresidual)
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
Zresid.LeukSurv.wbc
library(Zresidual)
ftype(Zresid.LeukSurv.logwbc)
s3_dispatch(Zresid.LeukSurv.logwbc)
library(Zresidual)
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
Zresid.LeukSurv.wbc
install.packages("lmfor")
library(lmfor)
data(afterthin)
View(afterthin)
linesplot(afterthin$CA,
afterthin$RBA,
group=afterthin$Plot:afterthin$Tree,
col.lin=as.numeric(afterthin$SDClass),cex=0,
xlab="Tree age",
ylab=expression("Ring basal area, "*mm^2))
linesplot(afterthin$Year,
afterthin$RBA,
group=afterthin$Plot:afterthin$Tree,
col.lin=as.numeric(afterthin$SDClass),cex=0,
xlab="Year",
ylab=expression("Ring basal area, "*mm^2))
table(afterthin$Plot)
table(afterthin$Tree)
table(afterthin$Tree[afterthin$Plot==1])
table((afterthin$Tree)[afterthin$Plot==1])
table((afterthin$Tree)[afterthin$Plot==2])
table((afterthin$Tree)[afterthin$Plot==435])
table((afterthin$Tree)[afterthin$Plot==3])
table(unlist(afterthin))
data(alsTree)
View(alsTree)
data(BrkRes)
View(BrkRes)
?lme
library(Zresidual)
library(survival)
library(EnvStats)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
#is.factor(LeukSurv$district)
#is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
LeukSurv$logwbc<- log(LeukSurv$wbc+0.001)
fit_LeukSurv_wbc <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv_logwbc  <- tryCatch(
coxph(Surv(time, cens) ~ age +sex + logwbc + tpi +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
if (any(is.na(fit_LeukSurv_wbc)) || any(is.na(fit_LeukSurv_logwbc))) stop("An error or warning has occurred during the model fitting process.")
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
par(mfrow = c(1,2),mar=c(4,4,2,2))
qqnorm.zresid (Zresid.LeukSurv.wbc,main.title = "Z-residual QQ plot of wbc model")
qqnorm.zresid (Zresid.LeukSurv.logwbc,main.title = "Z-residual QQ plot of lwbc model")
par(mfrow = c(2,2),mar=c(4,4,1.5,2))
plot.zresid(Zresid.LeukSurv.wbc,
fitted.values=fit_LeukSurv_wbc$linear.predictors,
xlab="Linear Predictor",
main.title = "Z-residual Scatterplot of wbc model")
plot.zresid(Zresid.LeukSurv.logwbc,
fitted.values=fit_LeukSurv_logwbc$linear.predictors,
xlab="Linear Predictor",
main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors,
main.title = "Z-residual Boxplot of wbc model",xlab="Linear Predictor")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors,
main.title = "Z-residual Boxplot of lwbc model",xlab="Linear Predictor")
par(mfrow = c(2,2),mar=c(4,4,1.5,2))
plot.zresid(Zresid.LeukSurv.wbc,
fitted.values=LeukSurv$wbc,
xlab="wbc",main.title = "Z-residual Scatterplot of wbc model")
plot.zresid(Zresid.LeukSurv.logwbc,
fitted.values=LeukSurv$logwbc,
xlab="log(wbc)",main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc,main.title = "Z-residual Boxplot of wbc model",xlab="wbc")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc,main.title = "Z-residual Boxplot of wbc model", xlab="log(wbc)")
par(mfrow = c(1,2))
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$sex,xlab="sex",main.title = "Z-residual Boxplot of wbc model")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$sex,xlab="sex",main.title = "Z-residual Boxplot of lwbc model")
sw.test.zresid(Zresid.LeukSurv.wbc)
sw.test.zresid(Zresid.LeukSurv.logwbc)
sf.test.zresid(Zresid.LeukSurv.wbc)
sf.test.zresid(Zresid.LeukSurv.logwbc)
anov.test.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors, k.anova=10)
anov.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors, k.bl=10)
bartlett.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors, k.bl=10)
anov.test.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc, k.anova=10)
anov.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc, k.bl=10)
bartlett.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc, k.bl=10)
n_sims<-1000
cur_time = proc.time()
sw.LeukSurv.wbc<- rep(0,n_sims)
sf.LeukSurv.wbc<- rep(0,n_sims)
anov.LeukSurv.lp.wbc<- rep(0,n_sims)
anov.LeukSurv.wbc<- rep(0,n_sims)
sw.LeukSurv.lwbc<- rep(0,n_sims)
sf.LeukSurv.lwbc<- rep(0,n_sims)
anov.LeukSurv.lp.lwbc<- rep(0,n_sims)
anov.LeukSurv.lwbc<- rep(0,n_sims)
for(j in 1:n_sims ){
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
sw.LeukSurv.wbc[j]<-sw.test.zresid(Zresid.LeukSurv.wbc)
sf.LeukSurv.wbc[j]<-sf.test.zresid(Zresid.LeukSurv.wbc)
anov.LeukSurv.lp.wbc[j]<-anov.test.zresid(Zresid.LeukSurv.wbc,
fitted.values=fit_LeukSurv_wbc$linear.predictors,
k.anova=10)
anov.LeukSurv.wbc[j]<-anov.test.zresid(Zresid.LeukSurv.wbc,
fitted.values=LeukSurv$wbc,
k.anova=10)
Zresid.LeukSurv.lwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
sw.LeukSurv.lwbc[j]<-sw.test.zresid(Zresid.LeukSurv.lwbc)
sf.LeukSurv.lwbc[j]<-sf.test.zresid(Zresid.LeukSurv.lwbc)
anov.LeukSurv.lp.lwbc[j]<-anov.test.zresid(Zresid.LeukSurv.lwbc,
fitted.values=fit_LeukSurv_logwbc$linear.predictors,
k.anova=10)
anov.LeukSurv.lwbc[j]<-anov.test.zresid(Zresid.LeukSurv.lwbc,
fitted.values=LeukSurv$logwbc,
k.anova=10)
}
pmin.sw.LeukSurv.wbc<-bounds_pvalues(pv=sw.LeukSurv.wbc);pmin.sw.LeukSurv.wbc
pmin.sf.LeukSurv.wbc<-bounds_pvalues(pv=sf.LeukSurv.wbc);pmin.sf.LeukSurv.wbc
pmin.aov.lp.LeukSurv.wbc<-bounds_pvalues(pv=anov.LeukSurv.lp.wbc);pmin.aov.lp.LeukSurv.wbc
pmin.aov.wbc.LeukSurv<-bounds_pvalues(pv=anov.LeukSurv.wbc);pmin.aov.wbc.LeukSurv
pmin.sw.LeukSurv.lwbc<-bounds_pvalues(pv=sw.LeukSurv.lwbc);pmin.sw.LeukSurv.lwbc
pmin.sf.LeukSurv.lwbc<-bounds_pvalues(pv=sf.LeukSurv.lwbc);pmin.sf.LeukSurv.lwbc
pmin.aov.lp.LeukSurv.lwbc<-bounds_pvalues(pv=anov.LeukSurv.lp.lwbc);pmin.aov.lp.LeukSurv.lwbc
pmin.aov.lwbc.LeukSurv<-bounds_pvalues(pv=anov.LeukSurv.lwbc);pmin.aov.lwbc.LeukSurv
par(mfrow = c(4,2),mar=c(4,4,2,2))
hist(sw.LeukSurv.wbc,main="Replicated Z-SW P-values for wbc Model",breaks=20,
xlab="Z-SW P-values for wbc Model")
abline(v=pmin.sw.LeukSurv.wbc,col="red")
hist(sw.LeukSurv.lwbc,main="Replicated Z-SW P-values for lwbc Model",breaks=20,
xlab="Z-SW P-values for lwbc Model")
abline(v=pmin.sw.LeukSurv.lwbc,col="red")
hist(sf.LeukSurv.wbc,main="Replicated Z-SF P-values for wbc Model",breaks=20,
xlab="Z-SF P-values for wbc Model")
abline(v=pmin.sf.LeukSurv.wbc,col="red")
hist(sf.LeukSurv.lwbc,main="Replicated Z-SF P-values for lwbc Model",breaks=20,
xlab="Z-SF P-values for lwbc Model")
abline(v=pmin.sf.LeukSurv.lwbc,col="red")
hist(anov.LeukSurv.lp.wbc,main="Replicated Z-AOV with LP P-values for wbc Model",breaks=20,
xlab="Z-AOV with LP P-values for wbc Model")
abline(v=pmin.aov.lp.LeukSurv.wbc,col="red")
hist(anov.LeukSurv.lp.lwbc,main="Replicated Z-AOV with LP P-values for lwbc Model",breaks=20,
xlab="Z-AOV with LP P-values for lwbc Model")
abline(v=pmin.aov.lp.LeukSurv.lwbc,col="red")
hist(anov.LeukSurv.wbc,main="Replicated Z-AOV with wbc P-values for wbc Model",breaks=20,
xlab="Z-AOV with wbc P-values for wbc Model")
abline(v=pmin.aov.wbc.LeukSurv,col="red")
hist(anov.LeukSurv.lwbc,main="Replicated Z-AOV with wbc P-values for lwbc Model",breaks=20,
xlab="Z-AOV with lwbc P-values for lwbc Model")
abline(v=pmin.aov.lwbc.LeukSurv,col="red")
cen<-attr(censored.Zresidual, "censored.status")
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
cen<-attr(censored.Zresidual, "censored.status")
cen<-attr(censored.Zresid.LeukSurv.wbc, "censored.status")
is.vector(cen)
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
censored.Zresid.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type="censored Z-residual")
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv.wbc)
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv.wbc)
censored.Zresidual<-censored.Zresid.LeukSurv.logwbc
censored.Zresidual<- as.vector(censored.Zresidual)
id.negtv.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual < 0)
id.pos.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual > 0)
censored.Zresidual[id.negtv.inf]<- -1e10
censored.Zresidual[id.pos.inf]<- 1e10
id.negtv.inf
id.pos.inf
censored.status<-as.vector(attr(censored.Zresidual, "censored.status"))
censored.Zresidual<- as.vector(censored.Zresidual)
id.negtv.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual < 0)
id.pos.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual > 0)
censored.Zresidual[id.negtv.inf]<- -1e10
censored.Zresidual[id.pos.inf]<- 1e10
censored.status<-as.vector(attr(censored.Zresidual, "censored.status"))
censored.status
cens<-attr(censored.Zresidual, "censored.status")
censored.Zresidual<-censored.Zresid.LeukSurv.wbc
id.negtv.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual < 0)
id.negtv.inf
id.pos.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual > 0)
id.pos.inf
censored.Zresidual[id.negtv.inf]<- -1e10
censored.Zresidual[id.pos.inf]<- 1e10
censored.status<-attr(censored.Zresidual, "censored.status")
gofTestCensored(censored.Zresidual,censored=censored.status, test = "sf",
censoring.side = "right",
distribution = "norm")$p.value
censored.Zresidual<- as.vector(censored.Zresidual)
gofTestCensored(censored.Zresidual,censored=censored.status, test = "sf",
censoring.side = "right",
distribution = "norm")$p.value
