fitted.values=fit_LeukSurv_logwbc$linear.predictors,
xlab="Linear Predictor",
main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors,
main.title = "Z-residual Boxplot of wbc model",xlab="Linear Predictor")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors,
main.title = "Z-residual Boxplot of lwbc model",xlab="Linear Predictor")
par(mfrow = c(2,2),mar=c(4,4,1.5,2))
plot.zresid(Zresid.LeukSurv.wbc,
fitted.values=fit_LeukSurv_wbc$linear.predictors,
xlab="Linear Predictor",
main.title = "Z-residual Scatterplot of wbc model")
plot.zresid(Zresid.LeukSurv.logwbc,
fitted.values=fit_LeukSurv_logwbc$linear.predictors,
xlab="Linear Predictor",
main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors,
main.title = "Z-residual Boxplot of wbc model",xlab="Linear Predictor")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors,
main.title = "Z-residual Boxplot of lwbc model",xlab="Linear Predictor")
par(mfrow = c(1,2),mar=c(4,4,2,2))
qqnorm.zresid (Zresid.LeukSurv.wbc,main.title = "Z-residual QQ plot of wbc model")
qqnorm.zresid (Zresid.LeukSurv.logwbc,main.title = "Z-residual QQ plot of lwbc model")
par(mfrow = c(2,2),mar=c(4,4,1.5,2))
plot.zresid(Zresid.LeukSurv.wbc,
fitted.values=LeukSurv$wbc,
xlab="wbc",main.title = "Z-residual Scatterplot of wbc model")
plot.zresid(Zresid.LeukSurv.logwbc,
fitted.values=LeukSurv$logwbc,
xlab="log(wbc)",main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc,main.title = "Z-residual Boxplot of wbc model",xlab="wbc")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc,main.title = "Z-residual Boxplot of wbc model", xlab="log(wbc)")
par(mfrow = c(1,2))
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$sex,xlab="sex",main.title = "Z-residual Boxplot of wbc model")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$sex,xlab="sex",main.title = "Z-residual Boxplot of lwbc model")
library(Zresidual)
par(mfrow = c(1,2))
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$sex,xlab="sex",main.title = "Z-residual Boxplot of wbc model")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$sex,xlab="sex",main.title = "Z-residual Boxplot of lwbc model")
sw.test.zresid(Zresid.LeukSurv.wbc)
sw.test.zresid(Zresid.LeukSurv.logwbc)
sf.test.zresid(Zresid.LeukSurv.wbc)
sf.test.zresid(Zresid.LeukSurv.logwbc)
anov.test.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors, k.anova=10)
anov.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors, k.bl=10)
bartlett.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors, k.bl=10)
anov.test.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc, k.anova=10)
anov.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc, k.bl=10)
bartlett.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc, k.bl=10)
library(Zresidual)
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
library(Zresidual)
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
censored.Zresid.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type="censored Z-residual")
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv.wbc)
View(censored.Zresid.LeukSurv.logwbc)
str(censored.Zresidual)
str(censored.Zresid.LeukSurv.wbc)
is.vector(censored.Zresid.LeukSurv.wbc)
as.vector(censored.Zresidual)
as.vector(censored.Zresid.LeukSurv.wbc)
censored<-attr(censored.Zresidual, "censored.status")
library(Zresidual)
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
censored.Zresid.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type="censored Z-residual")
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv.wbc)
View(censored.Zresid.LeukSurv.logwbc)
View(censored.Zresid.LeukSurv.logwbc)
censored.Zresid.LeukSurv.logwbc
library(Zresidual)
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
View(censored.Zresid.LeukSurv.wbc)
censored.Zresid.LeukSurv.wbc
print(as.vector(censored.Zresid.LeukSurv.wbc))
library(Zresidual)
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
censored.Zresid.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type="censored Z-residual")
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv.wbc)
attr(censored.Zresid.LeukSurv.wbc, "censored.status")
is.vector(attr(censored.Zresid.LeukSurv.wbc, "censored.status"))
library(Zresidual)
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
censored.Zresid.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type="censored Z-residual")
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv.wbc)
library(Zresidual)
library(survival)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
#is.factor(LeukSurv$district)
#is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
LeukSurv$logwbc<- log(LeukSurv$wbc+0.001)
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
censored.Zresid.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type="censored Z-residual")
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv.wbc)
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
censored.Zresid.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type="censored Z-residual")
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv.wbc)
View(censored.Zresid.LeukSurv.wbc)
View(censored.Zresid.LeukSurv.logwbc)
censored.Zresid.LeukSurv.wbc
#Martingale residuals
martg.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type = "martingale" )
martg.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type = "martingale" )
par(mfrow = c(1,2))
plot(LeukSurv$wbc,martg.LeukSurv.wbc,ylab="Martingale",
xlab="wbc",
main= title(main="Martingale Residual Plot of wbc Model",cex.main=0.8),
col=c("blue","darkolivegreen4")[LeukSurv$cens+1],
pch=c(3,2)[LeukSurv$cens+1])
#abline(h=c(3,-3),col="grey")
lines(lowess(martg.LeukSurv.wbc~ LeukSurv$wbc),
col = "red",lwd = 3)
legend(x = "bottomright",
legend = c("Uncensored", "Censored"),
col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=0.4,xpd = TRUE,bty="l",horiz=TRUE)
plot(LeukSurv$logwbc,martg.LeukSurv.logwbc,ylab="Martingale",
xlab="log(wbc)",
main=title(main="Martingale Residual Plot of lwbc Model",cex.main=0.8),
col=c("blue","darkolivegreen4")[LeukSurv$cens+1],
pch=c(3,2)[LeukSurv$cens+1])
#abline(h=c(3,-3),col="grey")
lines(lowess(martg.LeukSurv.logwbc~ LeukSurv$logwbc),
col = "red",lwd = 3)
legend(x = "bottomright",
legend = c("Uncensored", "Censored"),
col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=0.4,xpd = TRUE,bty="l",horiz=TRUE)
#Deviance residuals
dev.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type = "deviance" )
dev.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type = "deviance" )
par(mfrow = c(1,2))
plot(LeukSurv$wbc,dev.LeukSurv.wbc,ylab="Deviance",
xlab="wbc",
main=title(main="Deviance Residual Plot of wbc Model",cex.main=0.8),
col=c("blue","darkolivegreen4")[LeukSurv$cens+1],
pch=c(3,2)[LeukSurv$cens+1])
#abline(h=c(3,-3),col="grey")
lines(lowess(dev.LeukSurv.wbc~ LeukSurv$wbc),
col = "red",lwd = 3)
legend(x = "bottomright",
legend = c("Uncensored", "Censored"),
col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=0.4,xpd = TRUE,bty="l")
plot(LeukSurv$logwbc,dev.LeukSurv.logwbc,ylab="Deviance",
xlab="log(wbc)",
main=title(main="Deviance Residual Plot of lwbc Model",cex.main=0.8),
col=c("blue","darkolivegreen4")[LeukSurv$cens+1],
pch=c(3,2)[LeukSurv$cens+1])
#abline(h=c(3,-3),col="grey")
lines(lowess(dev.LeukSurv.logwbc~ LeukSurv$logwbc),
col = "red",lwd = 3)
legend(x = "bottomright",
legend = c("Uncensored", "Censored"),
col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=.4,xpd = TRUE,bty="l")
##unmodified CS residuals
ucs.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type = "Cox-Snell" )
ucs.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type = "Cox-Snell" )
par(mfrow = c(1,2))
km.ln.LeukSurv.wbc <- survfit(Surv(ucs.LeukSurv.wbc, LeukSurv$cens)~1,type='fleming')
id.ln.LeukSurv.wbc<-order(ucs.LeukSurv.wbc)
plot(km.ln.LeukSurv.wbc, fun="cumhaz", xlab=("Cox-Snell Residuals"),
ylab=("Cumulative Hazard Function"),
main="CS Residuals of wbc model",
ylim= c(0,4),xlim=c(0,4))
abline(0, 1, col="red", lty=2)
points(km.ln.LeukSurv.wbc$time, -log(km.ln.LeukSurv.wbc$surv),
col=c("blue","darkolivegreen4")[LeukSurv$cens[id.ln.LeukSurv.wbc]+1],
pch=c(3,2)[LeukSurv$cens[id.ln.LeukSurv.wbc]+1] )
legend(x = "topleft",
legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="L")
km.ln.LeukSurv.lwbc <- survfit(Surv(ucs.LeukSurv.logwbc, LeukSurv$cens)~1,type='fleming')
id.ln.LeukSurv.lwbc<-order(ucs.LeukSurv.logwbc)
plot(km.ln.LeukSurv.lwbc, fun="cumhaz", xlab=("Cox-Snell Residuals"),
ylab=("Cumulative Hazard Function"),
main="CS Residuals of lwbc model",
ylim= c(0,4),xlim=c(0,4))
abline(0, 1, col="red", lty=2)
points(km.ln.LeukSurv.lwbc$time, -log(km.ln.LeukSurv.lwbc$surv),
col=c("blue","darkolivegreen4")[LeukSurv$cens[id.ln.LeukSurv.lwbc]+1],
pch=c(3,2)[LeukSurv$cens[id.ln.LeukSurv.lwbc]+1] )
legend(x = "topleft",
legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="L")
##unmodified CS residuals
ucs.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type = "Cox-Snell" )
ucs.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type = "Cox-Snell" )
par(mfrow = c(1,2))
km.ln.LeukSurv.wbc <- survfit(Surv(ucs.LeukSurv.wbc, LeukSurv$cens)~1,type='fleming')
id.ln.LeukSurv.wbc<-order(ucs.LeukSurv.wbc)
plot(km.ln.LeukSurv.wbc, fun="cumhaz", xlab=("Cox-Snell Residuals"),
ylab=("Cumulative Hazard Function"),
main="CS Residuals of wbc model"
#     ,ylim= c(0,4),xlim=c(0,4)
)
abline(0, 1, col="red", lty=2)
points(km.ln.LeukSurv.wbc$time, -log(km.ln.LeukSurv.wbc$surv),
col=c("blue","darkolivegreen4")[LeukSurv$cens[id.ln.LeukSurv.wbc]+1],
pch=c(3,2)[LeukSurv$cens[id.ln.LeukSurv.wbc]+1] )
legend(x = "topleft",
legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="L")
km.ln.LeukSurv.lwbc <- survfit(Surv(ucs.LeukSurv.logwbc, LeukSurv$cens)~1,type='fleming')
id.ln.LeukSurv.lwbc<-order(ucs.LeukSurv.logwbc)
plot(km.ln.LeukSurv.lwbc, fun="cumhaz", xlab=("Cox-Snell Residuals"),
ylab=("Cumulative Hazard Function"),
main="CS Residuals of lwbc model"
#     ,ylim= c(0,4),xlim=c(0,4)
)
abline(0, 1, col="red", lty=2)
points(km.ln.LeukSurv.lwbc$time, -log(km.ln.LeukSurv.lwbc$surv),
col=c("blue","darkolivegreen4")[LeukSurv$cens[id.ln.LeukSurv.lwbc]+1],
pch=c(3,2)[LeukSurv$cens[id.ln.LeukSurv.lwbc]+1] )
legend(x = "topleft",
legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="L")
##unmodified CS residuals
ucs.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type = "Cox-Snell" )
ucs.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type = "Cox-Snell" )
par(mfrow = c(1,2))
km.ln.LeukSurv.wbc <- survfit(Surv(ucs.LeukSurv.wbc, LeukSurv$cens)~1,type='fleming')
id.ln.LeukSurv.wbc<-order(ucs.LeukSurv.wbc)
plot(km.ln.LeukSurv.wbc, fun="cumhaz", xlab=("Cox-Snell Residuals"),
ylab=("Cumulative Hazard Function"),
main="CS Residuals of wbc model")
abline(0, 1, col="red", lty=2)
points(km.ln.LeukSurv.wbc$time, -log(km.ln.LeukSurv.wbc$surv),
col=c("blue","darkolivegreen4")[LeukSurv$cens[id.ln.LeukSurv.wbc]+1],
pch=c(3,2)[LeukSurv$cens[id.ln.LeukSurv.wbc]+1] )
legend(x = "topleft",
legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="L")
km.ln.LeukSurv.lwbc <- survfit(Surv(ucs.LeukSurv.logwbc, LeukSurv$cens)~1,type='fleming')
id.ln.LeukSurv.lwbc<-order(ucs.LeukSurv.logwbc)
plot(km.ln.LeukSurv.lwbc, fun="cumhaz", xlab=("Cox-Snell Residuals"),
ylab=("Cumulative Hazard Function"),
main="CS Residuals of lwbc model")
abline(0, 1, col="red", lty=2)
points(km.ln.LeukSurv.lwbc$time, -log(km.ln.LeukSurv.lwbc$surv),
col=c("blue","darkolivegreen4")[LeukSurv$cens[id.ln.LeukSurv.lwbc]+1],
pch=c(3,2)[LeukSurv$cens[id.ln.LeukSurv.lwbc]+1] )
legend(x = "topleft",
legend = c("Uncensored", "Censored"), col=c("darkolivegreen4","blue"),
pch=c(2,3),cex=1,xpd = TRUE,bty="L")
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
censored.Zresid.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type="censored Z-residual")
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv.wbc)
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
censored.Zresid.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type="censored Z-residual")
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv.wbc)
gof.censore.zresid <- function (censored.Zresidual)
{
censored.Zresidual<- as.vector(censored.Zresidual)
id.negtv.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual < 0)
id.pos.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual > 0)
censored.Zresidual[id.negtv.inf]<- -1e10
censored.Zresidual[id.pos.inf]<- 1e10
censored<-as.vector(attr(censored.Zresidual, "censored.status"))
gofTestCensored(censored.Zresidual,censored, test = "sf",
censoring.side = "right",
distribution = "norm")$p.value
}
gof.censore.zresid(censored.Zresid.LeukSurv.wbc)
library(Zresidual)
library(survival)
library(EnvStats)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
#is.factor(LeukSurv$district)
#is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
LeukSurv$logwbc<- log(LeukSurv$wbc+0.001)
gof.censore.zresid(censored.Zresid.LeukSurv.wbc)
?gofTestCensored
gof.censore.zresid <- function (censored.Zresidual)
{
censored.Zresidual<- as.vector(censored.Zresidual)
id.negtv.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual < 0)
id.pos.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual > 0)
censored.Zresidual[id.negtv.inf]<- -1e10
censored.Zresidual[id.pos.inf]<- 1e10
censored<-as.vector(attr(censored.Zresidual, "censored.status"))
gofTestCensored(censored.Zresidual,censored=censored, test = "sf",
censoring.side = "right",
distribution = "norm")$p.value
}
gof.censore.zresid(censored.Zresid.LeukSurv.wbc)
a<-attr(censored.Zresid.LeukSurv.wbc, "censored.status")
b<-as.vector(a)
is.vector(a)
gof.censore.zresid <- function (censored.Zresidual)
{
censored.Zresidual<- as.vector(censored.Zresidual)
id.negtv.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual < 0)
id.pos.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual > 0)
censored.Zresidual[id.negtv.inf]<- -1e10
censored.Zresidual[id.pos.inf]<- 1e10
censored.status<-as.vector(attr(censored.Zresidual, "censored.status"))
gofTestCensored(censored.Zresidual,censored=censored.status, test = "sf",
censoring.side = "right",
distribution = "norm")$p.value
}
gof.censore.zresid(censored.Zresid.LeukSurv.wbc)
gof.censore.zresid <- function (censored.Zresidual)
{
censored.Zresidual<- as.vector(censored.Zresidual)
id.negtv.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual < 0)
id.pos.inf <- which(is.infinite(censored.Zresidual) & censored.Zresidual > 0)
censored.Zresidual[id.negtv.inf]<- -1e10
censored.Zresidual[id.pos.inf]<- 1e10
censored.status<-as.vector(attr(censored.Zresidual, "censored.status"))
gofTestCensored(censored.Zresidual,censored=censored.status, test = "sf",
censoring.side = "right",
distribution = "norm")$p.value
}
gof.censore.zresid(censored.Zresid.LeukSurv.wbc)
gofTestCensored(censored.Zresidual,censored=LeukSurv$cens, test = "sf",
censoring.side = "right",
distribution = "norm")$p.value
gofTestCensored(censored.Zresid.LeukSurv.wbc,censored=LeukSurv$cens, test = "sf",
censoring.side = "right",
distribution = "norm")$p.value
censored.Zresid.LeukSurv.wbc
View(dev.LeukSurv.logwbc)
dev.LeukSurv.logwbc
library(Zresidual)
library(Zresidual)
library(survival)
library(EnvStats)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
#is.factor(LeukSurv$district)
#is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
LeukSurv$logwbc<- log(LeukSurv$wbc+0.001)
fit_LeukSurv_wbc <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv_logwbc  <- tryCatch(
coxph(Surv(time, cens) ~ age +sex + logwbc + tpi +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
if (any(is.na(fit_LeukSurv_wbc)) || any(is.na(fit_LeukSurv_logwbc))) stop("An error or warning has occurred during the model fitting process.")
library(Zresidual)
library(survival)
library(EnvStats)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
#is.factor(LeukSurv$district)
#is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
LeukSurv$logwbc<- log(LeukSurv$wbc+0.001)
fit_LeukSurv_wbc <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv_logwbc  <- tryCatch(
coxph(Surv(time, cens) ~ age +sex + logwbc + tpi +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
if (any(is.na(fit_LeukSurv_wbc)) || any(is.na(fit_LeukSurv_logwbc))) stop("An error or warning has occurred during the model fitting process.")
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
Zresid.LeukSurv.logwbc
print(as.vector(Zresid.LeukSurv.wbc))
print.residuals <- function(x){
x<-print(as.vector(x))
x
}
library(Zresidual)
library(Zresidual)
library(survival)
library(EnvStats)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
#is.factor(LeukSurv$district)
#is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
LeukSurv$logwbc<- log(LeukSurv$wbc+0.001)
fit_LeukSurv_wbc <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv_logwbc  <- tryCatch(
coxph(Surv(time, cens) ~ age +sex + logwbc + tpi +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
if (any(is.na(fit_LeukSurv_wbc)) || any(is.na(fit_LeukSurv_logwbc))) stop("An error or warning has occurred during the model fitting process.")
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
View(Zresid.LeukSurv.logwbc)
View(Zresid.LeukSurv.logwbc)
Zresid.LeukSurv.logwbc
library(Zresidual)
library(survival)
library(EnvStats)
## basic example code
data("LeukSurv")
head(LeukSurv)
LeukSurv<-LeukSurv[LeukSurv$age<60,]
#is.factor(LeukSurv$district)
#is.factor(LeukSurv$sex)
LeukSurv$district<-as.factor(LeukSurv$district)
LeukSurv$sex<-as.factor(LeukSurv$sex)
LeukSurv$logwbc<- log(LeukSurv$wbc+0.001)
fit_LeukSurv_wbc <- tryCatch(
coxph(Surv(time, cens) ~ age  +sex+ wbc +tpi  +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
fit_LeukSurv_logwbc  <- tryCatch(
coxph(Surv(time, cens) ~ age +sex + logwbc + tpi +
frailty(district, distribution="gamma"), data= LeukSurv),
error = function(e) NA,
warning = function(w) NA
)
if (any(is.na(fit_LeukSurv_wbc)) || any(is.na(fit_LeukSurv_logwbc))) stop("An error or warning has occurred during the model fitting process.")
Zresid.LeukSurv.wbc<-Zresidual(fit.object = fit_LeukSurv_wbc,data= LeukSurv)
Zresid.LeukSurv.logwbc<-Zresidual(fit.object = fit_LeukSurv_logwbc,data= LeukSurv)
View(Zresid.LeukSurv.wbc)
Zresid.LeukSurv.wbc
par(mfrow = c(2,2),mar=c(4,4,1.5,2))
plot.zresid(Zresid.LeukSurv.wbc,
fitted.values=fit_LeukSurv_wbc$linear.predictors,
xlab="Linear Predictor",
main.title = "Z-residual Scatterplot of wbc model")
plot.zresid(Zresid.LeukSurv.logwbc,
fitted.values=fit_LeukSurv_logwbc$linear.predictors,
xlab="Linear Predictor",
main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors,
main.title = "Z-residual Boxplot of wbc model",xlab="Linear Predictor")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors,
main.title = "Z-residual Boxplot of lwbc model",xlab="Linear Predictor")
par(mfrow = c(1,2),mar=c(4,4,2,2))
qqnorm.zresid (Zresid.LeukSurv.wbc,main.title = "Z-residual QQ plot of wbc model")
qqnorm.zresid (Zresid.LeukSurv.logwbc,main.title = "Z-residual QQ plot of lwbc model")
plot(Zresid.LeukSurv.wbc)
par(mfrow = c(2,2),mar=c(4,4,1.5,2))
plot.zresid(Zresid.LeukSurv.wbc,
fitted.values=LeukSurv$wbc,
xlab="wbc",main.title = "Z-residual Scatterplot of wbc model")
plot.zresid(Zresid.LeukSurv.logwbc,
fitted.values=LeukSurv$logwbc,
xlab="log(wbc)",main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc,main.title = "Z-residual Boxplot of wbc model",xlab="wbc")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc,main.title = "Z-residual Boxplot of wbc model", xlab="log(wbc)")
par(mfrow = c(2,2),mar=c(4,4,1.5,2))
plot.zresid(Zresid.LeukSurv.wbc,
fitted.values=LeukSurv$wbc,
xlab="wbc",main.title = "Z-residual Scatterplot of wbc model")
plot.zresid(Zresid.LeukSurv.logwbc,
fitted.values=LeukSurv$logwbc,
xlab="log(wbc)",main.title = "Z-residual Scatterplot of lwbc model")
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc,main.title = "Z-residual Boxplot of wbc model",xlab="wbc")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc,main.title = "Z-residual Boxplot of wbc model", xlab="log(wbc)")
par(mfrow = c(1,2))
boxplot.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$sex,xlab="sex",main.title = "Z-residual Boxplot of wbc model")
boxplot.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$sex,xlab="sex",main.title = "Z-residual Boxplot of lwbc model")
sw.test.zresid(Zresid.LeukSurv.wbc)
sw.test.zresid(Zresid.LeukSurv.logwbc)
sf.test.zresid(Zresid.LeukSurv.wbc)
sf.test.zresid(Zresid.LeukSurv.logwbc)
anov.test.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors, k.anova=10)
anov.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv.wbc,fitted.values=fit_LeukSurv_wbc$linear.predictors, k.bl=10)
bartlett.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=fit_LeukSurv_logwbc$linear.predictors, k.bl=10)
anov.test.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc, k.anova=10)
anov.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc, k.anova=10)
bartlett.test.zresid(Zresid.LeukSurv.wbc,fitted.values=LeukSurv$wbc, k.bl=10)
bartlett.test.zresid(Zresid.LeukSurv.logwbc,fitted.values=LeukSurv$logwbc, k.bl=10)
censored.Zresid.LeukSurv.wbc<-residuals(fit.object = fit_LeukSurv_wbc,data= LeukSurv,residual.type="censored Z-residual")
censored.Zresid.LeukSurv.logwbc<-residuals(fit.object = fit_LeukSurv_logwbc,data= LeukSurv,residual.type="censored Z-residual")
gof.censore.zresid(censored.Zresidual=censored.Zresid.LeukSurv.wbc)
View(censored.Zresid.LeukSurv.logwbc)
print(as.vector(censored.Zresid.LeukSurv.logwbc))
as.vector(censored.Zresid.LeukSurv.logwbc)
censored.Zresid.LeukSurv.logwbc
